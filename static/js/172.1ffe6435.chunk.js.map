{"version":3,"file":"static/js/172.1ffe6435.chunk.js","mappings":"uRACA,EAAgC,8BAAhC,EAA4E,4BAA5E,EAAkH,wBAAlH,EAAqJ,yBAArJ,EAA4L,4B,SCiCtLA,EAAiB,WACrB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAMC,EAAAA,EAAAA,IAAYC,EAAAA,IAClBC,GAAOF,EAAAA,EAAAA,IAAYG,EAAAA,IACnBC,GAAgBJ,EAAAA,EAAAA,IAAYK,EAAAA,IAC5BC,GAAYN,EAAAA,EAAAA,IAAYO,EAAAA,IACxBC,GAAUR,EAAAA,EAAAA,IAAYS,EAAAA,IAc5B,GAA4CC,EAAAA,EAAAA,WAC1CC,EAAAA,EAAAA,GAAOL,EAAW,eACnB,eAFMM,EAAc,KAAEC,EAAiB,KAiBxC,OACE,qBAASC,UAAWC,EAAqB,WACvC,eAAID,UAAWC,EAAgB,SAAEC,EAAAA,GAAUd,MAE3C,kBAAMY,UAAWC,EAAmB,WAClC,gBAAKD,UAAWC,EAAe,UAC7B,SAACE,EAAA,EAAM,CACLC,SApCc,SAACC,GACnBA,EAAMC,OAAOC,OACfxB,GAASyB,EAAAA,EAAAA,IAAaH,EAAMC,OAAOC,OAEvC,EAiCUE,KAAMnB,EACNoB,aAAchB,EACdiB,MAAOC,EAAAA,GAAUxB,QAIrB,gBAAKY,UAAWC,EAAe,UAC7B,SAACE,EAAA,EAAM,CACLC,SAvCU,SAACC,GACfA,EAAMC,OAAOC,OACfxB,GAAS8B,EAAAA,EAAAA,IAASR,EAAMC,OAAOC,OAEnC,EAoCUE,KAAMK,EAAAA,GAAY1B,GAClBsB,aAAczB,EACd0B,MAAOI,EAAAA,GAAQ3B,QAInB,iBAAKY,WAAWgB,EAAAA,EAAAA,GAAKf,EAAgBA,GAAoB,WACvD,2BAAQgB,EAAAA,GAAS7B,MACjB,kBACE8B,KAAK,OACLd,SAxCgB,SAACC,GACrBA,EAAMC,OAAOa,cACfpC,GAASqC,EAAAA,EAAAA,IAAcf,EAAMC,OAAOa,cACpCpB,GAAkB,kBAChBF,EAAAA,EAAAA,GAAOQ,EAAMC,OAAOa,YAAqB,aAAa,IAG5D,EAkCUZ,MAAOT,WAKb,SAACuB,EAAA,EAAM,CACLC,WAAYC,EAAAA,GAAWnC,GACvBoC,qBAvCmB,WACvBzC,GAAS0C,EAAAA,EAAAA,MACX,MAyCF,EAEA,GAAeC,EAAAA,EAAAA,MAAK5C,E","sources":["webpack://the_rest_of_your_life/./src/components/Form/styles.module.css?5f34","components/Form/Form.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formComponent\":\"styles_formComponent__wh59Z\",\"formWrapper\":\"styles_formWrapper__2djvu\",\"formRow\":\"styles_formRow__0Ofx6\",\"subTitle\":\"styles_subTitle__YBQ4c\",\"dateWrapper\":\"styles_dateWrapper__NFvXf\"};","import React, { memo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { format } from 'date-fns';\nimport clsx from 'clsx';\n\nimport {\n  formButton,\n  formDate,\n  formNames,\n  formSex,\n  formSexList,\n  formTitle\n} from '../../constants/form';\n\nimport { Button } from '../../ui/Button';\nimport Select from '../../ui/Select';\n\nimport {\n  selectChosenSex,\n  selectChosenLang,\n  selectCountriesList,\n  selectBirthDate,\n  selectCountry\n} from '../../store/Search/selectors/selectors';\n\nimport {\n  choseSex,\n  birthDateSaga,\n  choseCountry,\n  searchRequestSaga\n} from '../../store/Search/ducks';\n\nimport styles from './styles.module.css';\n\nconst Form: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const sex = useSelector(selectChosenSex);\n  const lang = useSelector(selectChosenLang);\n  const countriesList = useSelector(selectCountriesList);\n  const birthDate = useSelector(selectBirthDate);\n  const country = useSelector(selectCountry);\n\n  const choseNewCountry = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (event.target.value) {\n      dispatch(choseCountry(event.target.value));\n    }\n  };\n\n  const choseNewSex = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (event.target.value) {\n      dispatch(choseSex(event.target.value));\n    }\n  };\n\n  const [localBirthDate, setLocalBirthDate] = useState(\n    format(birthDate, 'yyyy-MM-dd')\n  );\n\n  const choseNewBirthDate = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.valueAsDate) {\n      dispatch(birthDateSaga(event.target.valueAsDate));\n      setLocalBirthDate(() =>\n        format(event.target.valueAsDate as Date, 'yyyy-MM-dd')\n      );\n    }\n  };\n\n  const calculateHandler = () => {\n    dispatch(searchRequestSaga());\n  };\n\n  return (\n    <section className={styles.formComponent}>\n      <h2 className={styles.subTitle}>{formTitle[lang]}</h2>\n\n      <form className={styles.formWrapper}>\n        <div className={styles.formRow}>\n          <Select\n            onChange={choseNewCountry}\n            list={countriesList}\n            currentValue={country}\n            title={formNames[lang]}\n          />\n        </div>\n\n        <div className={styles.formRow}>\n          <Select\n            onChange={choseNewSex}\n            list={formSexList[lang]}\n            currentValue={sex}\n            title={formSex[lang]}\n          />\n        </div>\n\n        <div className={clsx(styles.formRow, styles.dateWrapper)}>\n          <label>{formDate[lang]}</label>\n          <input\n            type=\"date\"\n            onChange={choseNewBirthDate}\n            value={localBirthDate}\n          />\n        </div>\n      </form>\n\n      <Button\n        buttonText={formButton[lang]}\n        buttonOnClickHandler={calculateHandler}\n      />\n    </section>\n  );\n};\n\nexport default memo(Form);\n"],"names":["Form","dispatch","useDispatch","sex","useSelector","selectChosenSex","lang","selectChosenLang","countriesList","selectCountriesList","birthDate","selectBirthDate","country","selectCountry","useState","format","localBirthDate","setLocalBirthDate","className","styles","formTitle","Select","onChange","event","target","value","choseCountry","list","currentValue","title","formNames","choseSex","formSexList","formSex","clsx","formDate","type","valueAsDate","birthDateSaga","Button","buttonText","formButton","buttonOnClickHandler","searchRequestSaga","memo"],"sourceRoot":""}