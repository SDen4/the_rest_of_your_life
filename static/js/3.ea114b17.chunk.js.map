{"version":3,"sources":["../node_modules/clsx/dist/clsx.m.js","components/WeeksTable/WeeksTable.module.css","components/Result/assets/ResultText/ResultText.module.css","components/Result/Result.module.css","constants/result.ts","utils/inflection.ts","components/WeeksTable/WeeksTable.tsx","components/Result/assets/ResultText/ResultText.tsx","components/Result/Result.tsx"],"names":["r","e","t","f","n","Array","isArray","length","clsx","arguments","module","exports","resultButton","rus","eng","resultText1","resultTextMan","resultTextWoman","resultTextIs","resultTextData","resultTextYearRus","resultTextWho","resultTextFor","resultTextLivedMan","resultTextLivedWoman","resultTextCons","resultTextAfterPers","resultTextLucky","resultYearsTextinTheTable","resultYearsTextInTheTableLuckyMan","resultYearsTextInTheTableLuckyWooman","resultTextOr","resultTextOr2","resultTextWeek","resultTextFinal","resultTextFinalLucky","inflection","numInn","lang","num","Math","floor","toFixed","WeeksTable","valueYears","userYears","roundUserYears","useMemo","ceil","tableCols","i","push","className","styles","tableCell","height","restWeeks","tableColsRest","tableFullCellRest","weeksTableWrapper","rowsNum","arrToRender","tableRows","row","tableFullCell","tableExtraCell","tableInners","memo","ResultText","country","useSelector","selectSearchItem","sex","selectChosenSex","selectChosenLang","selectValueYears","statYears","selectStatYear","selectUserYears","formSexList","color","Result","dispatch","useDispatch","states","useState","show","setShow","resultWrapper","tableWrapper","tableWrapperAnime","onClick","curIndex","indexOf","showInfoWrapper","style","Button","buttonText","buttonOnClickHandler","result","form"],"mappings":"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","file":"static/js/3.ea114b17.chunk.js","sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableCell\":\"WeeksTable_tableCell__30vVm\",\"tableFullCell\":\"WeeksTable_tableFullCell__1KuKw\",\"tableFullCellRest\":\"WeeksTable_tableFullCellRest__2Np6n\",\"tableExtraCell\":\"WeeksTable_tableExtraCell__26vsx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color\":\"ResultText_color__33ocw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableWrapper\":\"Result_tableWrapper__2lkuz\",\"tableWrapperAnime\":\"Result_tableWrapperAnime__2ubzh\",\"anime\":\"Result_anime__2LmMv\",\"resultWrapper\":\"Result_resultWrapper__HbqTI\",\"showInfoWrapper\":\"Result_showInfoWrapper__2Pkkb\"};","export type constType = { [key: string]: string };\n\nexport const resultButton: constType = {\n  rus: 'Назад',\n  eng: 'Back'\n};\n\nexport const resultText1: constType = {\n  rus: 'средняя продолжительность жизни',\n  eng: 'the average life expectancy'\n};\n\nexport const resultTextMan: constType = {\n  rus: 'у мужчин',\n  eng: 'for men'\n};\n\nexport const resultTextWoman: constType = {\n  rus: 'у женщин',\n  eng: 'for women'\n};\n\nexport const resultTextIs: constType = {\n  rus: 'составляет',\n  eng: 'is'\n};\n\nexport const resultTextData: constType = {\n  rus: 'Это данные',\n  eng: 'This is'\n};\n\nexport const resultTextYearRus: constType = {\n  rus: 'год',\n  eng: 'year'\n};\n\nexport const resultTextWho: constType = {\n  rus: 'ВОЗ',\n  eng: 'the WHO data'\n};\n\nexport const resultTextFor: constType = {\n  rus: 'за',\n  eng: 'for'\n};\n\nexport const resultTextLivedMan: constType = {\n  rus: 'Ты прожил',\n  eng: \"You've lived for\"\n};\n\nexport const resultTextLivedWoman: constType = {\n  rus: 'Ты прожила',\n  eng: 'You have lived for'\n};\n\nexport const resultTextCons: constType = {\n  rus: 'что составляет',\n  eng: 'which is'\n};\n\nexport const resultTextAfterPers: constType = {\n  rus: 'от среднего срока жизни указанной тобой страны',\n  eng: 'of the average life of the country you specified'\n};\n\nexport const resultTextLucky: constType = {\n  rus: 'Похоже, тебе очень повезло.',\n  eng: \"It seems you're lucky.\"\n};\n\nexport const resultYearsTextinTheTable: constType = {\n  rus: 'Тебе осталось прожить еще примерно',\n  eng: 'You have about'\n};\n\nexport const resultYearsTextInTheTableLuckyMan: constType = {\n  rus: 'Ты - счастливчик! Ты прожил больше среднего на',\n  eng: 'You are lucky! You lived more than average by'\n};\n\nexport const resultYearsTextInTheTableLuckyWooman: constType = {\n  rus: 'А ты счастливая! Ты прожила больше среднего на',\n  eng: 'You are lucky! You lived more than average by'\n};\n\nexport const resultTextOr: constType = {\n  rus: '... или',\n  eng: '... or'\n};\n\nexport const resultTextOr2: constType = {\n  rus: ', или...',\n  eng: ', or...'\n};\n\nexport const resultTextWeek: constType = {\n  rus: 'недель.',\n  eng: 'weeks.'\n};\n\nexport const resultTextFinal: constType = {\n  rus: 'Цени свою жизнь!',\n  eng: 'Appreciate your life!'\n};\n\nexport const resultTextFinalLucky: constType = {\n  rus: 'Не останавливайся на достигнутом!',\n  eng: \"Don't stop there!\"\n};\n","/**\n * Принимает число и выбранный язык\n * Возвращает строку, включающую число, округленное до десятых, и \"год/лет\" в правильном склонении, либо англ версию\n *\n * @param {number} numInn\n * @param {string} lang\n * @return {*}  {string}\n */\nconst inflection = (numInn: number, lang: string): string => {\n  const num = Math.floor(numInn);\n\n  if (lang === 'rus') {\n    if (num !== 11 && num !== 111 && (num === 1 || num % 10 === 1)) {\n      return `${numInn.toFixed(1)} год`;\n    } else if (\n      (num > 1 && num < 5) ||\n      (num > 21 && (num % 10 === 2 || num % 10 === 3 || num % 10 === 4))\n    ) {\n      return `${numInn.toFixed(1)} года`;\n    } else {\n      return `${numInn.toFixed(1)} лет`;\n    }\n  } else {\n    return `${numInn.toFixed(1)} years`;\n  }\n};\n\nexport default inflection;\n","import React, { memo, useMemo } from 'react';\nimport clsx from 'clsx';\n\nimport { IWeeksTable } from './types';\n\nimport styles from './WeeksTable.module.css';\n\nconst WeeksTable: React.FC<IWeeksTable> = ({ valueYears, userYears }) => {\n  const roundUserYears = useMemo(() => Math.ceil(userYears), []);\n\n  const tableCols = [];\n  for (let i = 0; i < 52; i++) {\n    tableCols.push(\n      <td className={styles.tableCell} height={3} key={i + 1000} />\n    );\n  }\n\n  const restWeeks = useMemo(\n    () => Math.floor((1 - (roundUserYears - userYears)) * 52),\n    []\n  );\n\n  const tableColsRest: unknown[] = [];\n  for (let i = 1; i <= 52; i++) {\n    tableColsRest.push(\n      <td\n        className={clsx(\n          styles.tableCell,\n          restWeeks > i && styles.tableFullCellRest\n        )}\n        height={3}\n        key={i + 1000}\n      />\n    );\n  }\n\n  const tableInners = (rowsNum: number, tableCols: unknown[]) => {\n    const arrToRender = [];\n    const tableRows = valueYears > userYears ? rowsNum : userYears;\n\n    for (let i = 1; i <= tableRows; i++) {\n      arrToRender.push(\n        <tr\n          key={i + 1}\n          className={clsx(\n            styles.row,\n            userYears > i && styles.tableFullCell,\n            i > rowsNum && styles.tableExtraCell\n          )}\n        >\n          {i === roundUserYears ? tableColsRest : tableCols}\n        </tr>\n      );\n    }\n    return arrToRender;\n  };\n\n  return (\n    <div className={styles.weeksTableWrapper}>\n      <table>\n        <tbody>{tableInners(valueYears, tableCols)}</tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default memo(WeeksTable);\n","import React, { memo } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { formSexList } from '../../../../constants/form';\n\nimport {\n  resultText1,\n  resultTextAfterPers,\n  resultTextCons,\n  resultTextData,\n  resultTextFor,\n  resultTextIs,\n  resultTextLivedMan,\n  resultTextLivedWoman,\n  resultTextLucky,\n  resultTextMan,\n  resultTextWho,\n  resultTextWoman,\n  resultTextYearRus\n} from '../../../../constants/result';\n\nimport inflection from '../../../../utils/inflection';\n\nimport {\n  selectSearchItem,\n  selectChosenSex,\n  selectChosenLang,\n  selectValueYears,\n  selectStatYear,\n  selectUserYears\n} from '../../../../store/Search/selectors/selectors';\n\nimport styles from './ResultText.module.css';\n\nconst ResultText: React.FC = () => {\n  const country: string = useSelector(selectSearchItem);\n  const sex: string = useSelector(selectChosenSex);\n  const lang: string = useSelector(selectChosenLang);\n  const valueYears: number = useSelector(selectValueYears);\n  const statYears: number = useSelector(selectStatYear);\n  const userYears: number = useSelector(selectUserYears);\n\n  return (\n    <h2>\n      {country} {resultText1[lang]}{' '}\n      {sex === formSexList.rus[0] || sex === formSexList.eng[0]\n        ? resultTextMan[lang]\n        : ''}\n      {sex === formSexList.rus[1] || sex === formSexList.eng[1]\n        ? resultTextWoman[lang]\n        : ''}\n      {sex === formSexList.eng[2] || sex === formSexList.rus[2] ? '' : ''}{' '}\n      {resultTextIs[lang]}{' '}\n      <span className={styles.color}>{inflection(valueYears, lang)}</span>\n      .\n      <br />\n      {resultTextData[lang]} {resultTextWho[lang]} {resultTextFor[lang]}{' '}\n      {statYears} {resultTextYearRus[lang]}.\n      <br />\n      {userYears > valueYears && resultTextLucky[lang]}{' '}\n      {sex === formSexList.rus[0] ||\n      sex === formSexList.eng[0] ||\n      sex === formSexList.eng[2] ||\n      sex === formSexList.rus[2]\n        ? resultTextLivedMan[lang]\n        : ''}{' '}\n      {sex === formSexList.rus[1] || sex === formSexList.eng[1]\n        ? resultTextLivedWoman[lang]\n        : ''}{' '}\n      <span className={styles.color}>{inflection(userYears, lang)}</span>,{' '}\n      {resultTextCons[lang]}{' '}\n      <span className={styles.color}>\n        {((userYears / valueYears) * 100).toFixed(1)}%\n      </span>{' '}\n      {resultTextAfterPers[lang]}.\n    </h2>\n  );\n};\n\nexport default memo(ResultText);\n","import React, { memo, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport {\n  resultButton,\n  resultTextFinal,\n  resultTextFinalLucky,\n  resultTextOr,\n  resultTextWeek,\n  resultTextOr2,\n  resultYearsTextinTheTable,\n  resultYearsTextInTheTableLuckyMan,\n  resultYearsTextInTheTableLuckyWooman\n} from '../../constants/result';\nimport { formSexList } from '../../constants/form';\n\nimport {\n  selectChosenSex,\n  selectChosenLang,\n  selectValueYears,\n  selectUserYears\n} from '../../store/Search/selectors/selectors';\n\nimport { form, result } from '../../store/Search/ducks';\n\nimport inflection from '../../utils/inflection';\n\nimport Button from '../../ui/Button';\nimport WeeksTable from '../WeeksTable';\n\nimport ResultText from './assets/ResultText';\n\nimport { StateItemType, StateType } from './types';\n\nimport styles from './Result.module.css';\n\nconst Result: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const sex: string = useSelector(selectChosenSex);\n  const lang: string = useSelector(selectChosenLang);\n  const valueYears: number = useSelector(selectValueYears);\n  const userYears: number = useSelector(selectUserYears);\n\n  const height = useMemo(\n    () =>\n      userYears < valueYears\n        ? `${valueYears * 7 - 1}px`\n        : `${userYears * 7 - 1}px`,\n    []\n  );\n\n  const states: StateType = ['table', 'years', 'weeks', 'final'];\n  const [show, setShow] = useState<StateItemType>(states[0]);\n\n  const backHandler = () => {\n    dispatch(result(false));\n    dispatch(form(true));\n  };\n\n  const changeResultInfo = () => {\n    if (show === states[states.length - 1]) {\n      setShow(states[0]);\n    } else {\n      const curIndex = states.indexOf(show);\n      setShow(states[curIndex + 1]);\n    }\n  };\n\n  return (\n    <section className={styles.resultWrapper}>\n      <ResultText />\n      <div\n        className={clsx(\n          styles.tableWrapper,\n          show === 'table' && styles.tableWrapperAnime\n        )}\n        onClick={changeResultInfo}\n      >\n        {show === 'table' && (\n          <WeeksTable valueYears={valueYears} userYears={userYears} />\n        )}\n\n        {show === 'years' && (\n          <div className={styles.showInfoWrapper} style={{ height: height }}>\n            {userYears < valueYears ? (\n              <h2>\n                {resultYearsTextinTheTable[lang]}\n                <span>{inflection(valueYears - userYears, lang)}</span>\n                {resultTextOr2[lang]}\n              </h2>\n            ) : (\n              <h2>\n                {sex === formSexList.rus[0] ||\n                sex === formSexList.eng[0] ||\n                sex === formSexList.eng[2] ||\n                sex === formSexList.rus[2]\n                  ? resultYearsTextInTheTableLuckyMan[lang]\n                  : resultYearsTextInTheTableLuckyWooman[lang]}\n                <span>{inflection(userYears - valueYears, lang)}</span>\n              </h2>\n            )}\n          </div>\n        )}\n\n        {show === 'weeks' && (\n          <div className={styles.showInfoWrapper} style={{ height: height }}>\n            {userYears < valueYears ? (\n              <h2>\n                {resultTextOr[lang]}\n                <span>{((valueYears - userYears) * 52).toFixed()}</span>\n                {resultTextWeek[lang]}\n              </h2>\n            ) : (\n              <h2>\n                {resultTextOr[lang]}\n                <span>{((userYears - valueYears) * 52).toFixed()}</span>\n                {resultTextWeek[lang]}\n              </h2>\n            )}\n          </div>\n        )}\n\n        {show === 'final' && (\n          <div className={styles.showInfoWrapper} style={{ height: height }}>\n            {userYears < valueYears ? (\n              <h2>{resultTextFinal[lang]}</h2>\n            ) : (\n              <h2>{resultTextFinalLucky[lang]}</h2>\n            )}\n          </div>\n        )}\n      </div>\n\n      <Button\n        buttonText={resultButton[lang]}\n        buttonOnClickHandler={backHandler}\n      />\n    </section>\n  );\n};\n\nexport default memo(Result);\n"],"sourceRoot":""}