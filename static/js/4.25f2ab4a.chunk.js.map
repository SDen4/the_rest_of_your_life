{"version":3,"sources":["components/Form/Form.module.css","components/Form/Form.tsx"],"names":["module","exports","Form","dispatch","useDispatch","sex","useSelector","selectChosenSex","lang","selectChosenLang","countriesList","selectCountriesList","birthDate","selectBirthDate","country","selectCountry","useState","format","localBirthDate","setLocalBirthDate","className","styles","formComponent","subTitle","formTitle","formWrapper","formRow","Select","onChange","event","target","value","choseCountry","list","currentValue","title","formNames","choseSex","formSexList","formSex","clsx","dateWrapper","formDate","type","valueAsDate","birthDateSaga","Button","buttonText","formButton","buttonOnClickHandler","searchRequestSaga"],"mappings":"kHACAA,EAAOC,QAAU,CAAC,cAAgB,4BAA4B,YAAc,0BAA0B,QAAU,sBAAsB,SAAW,uBAAuB,YAAc,4B,yLCiHvKC,EAhFQ,WACrB,IAAMC,EAAWC,cAEXC,EAAcC,YAAYC,KAC1BC,EAAeF,YAAYG,KAC3BC,EAA0BJ,YAAYK,KACtCC,EAAkBN,YAAYO,KAE9BC,EAAUR,YAAYS,KAc5B,EAA4CC,mBAC1CC,YAAOL,EAAW,eADpB,mBAAOM,EAAP,KAAuBC,EAAvB,KAiBA,OACE,sBAAKC,UAAWC,IAAOC,cAAvB,UACE,oBAAIF,UAAWC,IAAOE,SAAtB,SAAiCC,IAAUhB,KAE3C,uBAAMY,UAAWC,IAAOI,YAAxB,UACE,qBAAKL,UAAWC,IAAOK,QAAvB,SACE,cAACC,EAAA,EAAD,CACEC,SApCc,SAACC,GACnBA,EAAMC,OAAOC,OACf5B,EAAS6B,YAAaH,EAAMC,OAAOC,SAmC7BE,KAAMvB,EACNwB,aAAcpB,EACdqB,MAAOC,IAAU5B,OAIrB,qBAAKY,UAAWC,IAAOK,QAAvB,SACE,cAACC,EAAA,EAAD,CACEC,SAvCU,SAACC,GACfA,EAAMC,OAAOC,OACf5B,EAASkC,YAASR,EAAMC,OAAOC,SAsCzBE,KAAMK,IAAY9B,GAClB0B,aAAc7B,EACd8B,MAAOI,IAAQ/B,OAInB,sBAAKY,UAAWoB,YAAKnB,IAAOK,QAASL,IAAOoB,aAA5C,UACE,gCAAQC,IAASlC,KACjB,uBACEmC,KAAK,OACLf,SAxCgB,SAACC,GACrBA,EAAMC,OAAOc,cACfzC,EAAS0C,YAAchB,EAAMC,OAAOc,cACpCzB,GAAkB,kBAChBF,YAAOY,EAAMC,OAAOc,YAAqB,mBAqCrCb,MAAOb,UAKb,cAAC4B,EAAA,EAAD,CACEC,WAAYC,IAAWxC,GACvByC,qBAvCmB,WACvB9C,EAAS+C","file":"static/js/4.25f2ab4a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formComponent\":\"Form_formComponent__f3zp3\",\"formWrapper\":\"Form_formWrapper__1ZjUZ\",\"formRow\":\"Form_formRow__tzTQf\",\"subTitle\":\"Form_subTitle__3xQx5\",\"dateWrapper\":\"Form_dateWrapper__3Esei\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { format } from 'date-fns';\nimport clsx from 'clsx';\n\nimport {\n  formButton,\n  formDate,\n  formNames,\n  formSex,\n  formSexList,\n  formTitle\n} from '../../constants/form';\n\nimport Button from '../../ui/Button';\nimport Select from '../../ui/Select';\n\nimport {\n  selectChosenSex,\n  selectChosenLang,\n  selectCountriesList,\n  selectBirthDate,\n  selectCountry\n} from '../../store/Search/selectors/selectors';\n\nimport {\n  choseSex,\n  birthDateSaga,\n  choseCountry,\n  searchRequestSaga\n} from '../../store/Search/ducks';\n\nimport styles from './Form.module.css';\n\nconst Form: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const sex: string = useSelector(selectChosenSex);\n  const lang: string = useSelector(selectChosenLang);\n  const countriesList: string[] = useSelector(selectCountriesList);\n  const birthDate: Date = useSelector(selectBirthDate);\n\n  const country = useSelector(selectCountry);\n\n  const choseNewCountry = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (event.target.value) {\n      dispatch(choseCountry(event.target.value));\n    }\n  };\n\n  const choseNewSex = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (event.target.value) {\n      dispatch(choseSex(event.target.value));\n    }\n  };\n\n  const [localBirthDate, setLocalBirthDate] = useState(\n    format(birthDate, 'yyyy-MM-dd')\n  );\n\n  const choseNewBirthDate = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.valueAsDate) {\n      dispatch(birthDateSaga(event.target.valueAsDate));\n      setLocalBirthDate(() =>\n        format(event.target.valueAsDate as Date, 'yyyy-MM-dd')\n      );\n    }\n  };\n\n  const calculateHandler = () => {\n    dispatch(searchRequestSaga());\n  };\n\n  return (\n    <div className={styles.formComponent}>\n      <h2 className={styles.subTitle}>{formTitle[lang]}</h2>\n\n      <form className={styles.formWrapper}>\n        <div className={styles.formRow}>\n          <Select\n            onChange={choseNewCountry}\n            list={countriesList}\n            currentValue={country}\n            title={formNames[lang]}\n          />\n        </div>\n\n        <div className={styles.formRow}>\n          <Select\n            onChange={choseNewSex}\n            list={formSexList[lang]}\n            currentValue={sex}\n            title={formSex[lang]}\n          />\n        </div>\n\n        <div className={clsx(styles.formRow, styles.dateWrapper)}>\n          <label>{formDate[lang]}</label>\n          <input\n            type=\"date\"\n            onChange={choseNewBirthDate}\n            value={localBirthDate}\n          />\n        </div>\n      </form>\n\n      <Button\n        buttonText={formButton[lang]}\n        buttonOnClickHandler={calculateHandler}\n      />\n    </div>\n  );\n};\n\nexport default Form;\n"],"sourceRoot":""}