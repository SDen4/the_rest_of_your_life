{"version":3,"file":"static/js/472.d2345a24.chunk.js","mappings":"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","sources":["webpack://the_rest_of_your_life/./src/components/shared/WeeksTable/styles.module.css?b198","components/shared/WeeksTable/WeeksTable.tsx","utils/inflection.ts","constants/result.ts","webpack://the_rest_of_your_life/./src/components/shared/Result/ResultText/styles.module.css?d128","components/shared/Result/ResultText/ResultText.tsx","webpack://the_rest_of_your_life/./src/components/shared/Result/styles.module.css?9745","components/shared/Result/Result.tsx","../node_modules/clsx/dist/clsx.m.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"tableCell\":\"styles_tableCell__-YdRx\",\"tableFullCell\":\"styles_tableFullCell__j04H0\",\"tableFullCellRest\":\"styles_tableFullCellRest__W+Ohj\",\"tableExtraCell\":\"styles_tableExtraCell__po2Y8\"};","import React, { useMemo } from 'react';\nimport clsx from 'clsx';\n\nimport styles from './styles.module.css';\n\ninterface IProps {\n  valueYears: number;\n  userYears: number;\n}\n\nexport const WeeksTable: React.FC<IProps> = ({ valueYears, userYears }) => {\n  const roundUserYears = useMemo(() => Math.ceil(userYears), []);\n\n  const tableCols = [];\n  for (let i = 0; i < 52; i++) {\n    tableCols.push(\n      <td className={styles.tableCell} height={3} key={i + 1000} />\n    );\n  }\n\n  const restWeeks = useMemo(\n    () => Math.floor((1 - (roundUserYears - userYears)) * 52),\n    []\n  );\n\n  const tableColsRest: unknown[] = [];\n  for (let i = 1; i <= 52; i++) {\n    tableColsRest.push(\n      <td\n        className={clsx(\n          styles.tableCell,\n          restWeeks > i && styles.tableFullCellRest\n        )}\n        height={3}\n        key={i + 1000}\n      />\n    );\n  }\n\n  const tableInners = (rowsNum: number, tableCols: unknown[]) => {\n    const arrToRender = [];\n    const tableRows = valueYears > userYears ? rowsNum : userYears;\n\n    for (let i = 1; i <= tableRows; i++) {\n      arrToRender.push(\n        <tr\n          key={i + 1}\n          className={clsx(\n            styles.row,\n            userYears > i && styles.tableFullCell,\n            i > rowsNum && styles.tableExtraCell\n          )}\n        >\n          {i === roundUserYears ? tableColsRest : tableCols}\n        </tr>\n      );\n    }\n    return arrToRender;\n  };\n\n  return (\n    <div className={styles.weeksTableWrapper}>\n      <table>\n        <tbody>{tableInners(valueYears, tableCols)}</tbody>\n      </table>\n    </div>\n  );\n};\n","/**\n * Принимает число и выбранный язык\n * Возвращает строку, включающую число, округленное до десятых, и \"год/лет\" в правильном склонении, либо англ версию\n *\n * @param {number} numInn\n * @param {string} lang\n * @return {*}  {string}\n */\nconst inflection = (numInn: number, lang: string): string => {\n  const num = Math.floor(numInn);\n\n  if (lang === 'rus') {\n    if (num !== 11 && num !== 111 && (num === 1 || num % 10 === 1)) {\n      return `${numInn.toFixed(1)} год`;\n    } else if (\n      (num > 1 && num < 5) ||\n      (num > 21 && (num % 10 === 2 || num % 10 === 3 || num % 10 === 4))\n    ) {\n      return `${numInn.toFixed(1)} года`;\n    } else {\n      return `${numInn.toFixed(1)} лет`;\n    }\n  } else {\n    return `${numInn.toFixed(1)} years`;\n  }\n};\n\nexport default inflection;\n","import { constType } from '../model/types';\n\nexport const resultButton: constType = {\n  rus: 'Назад',\n  eng: 'Back'\n};\n\nexport const resultText1: constType = {\n  rus: 'средняя продолжительность жизни',\n  eng: 'the average life expectancy'\n};\n\nexport const resultTextMan: constType = {\n  rus: 'у мужчин',\n  eng: 'for men'\n};\n\nexport const resultTextWoman: constType = {\n  rus: 'у женщин',\n  eng: 'for women'\n};\n\nexport const resultTextIs: constType = {\n  rus: 'составляет',\n  eng: 'is'\n};\n\nexport const resultTextData: constType = {\n  rus: 'Это данные',\n  eng: 'This is'\n};\n\nexport const resultTextYearRus: constType = {\n  rus: 'год',\n  eng: 'year'\n};\n\nexport const resultTextWho: constType = {\n  rus: 'ВОЗ',\n  eng: 'the WHO data'\n};\n\nexport const resultTextFor: constType = {\n  rus: 'за',\n  eng: 'for'\n};\n\nexport const resultTextLivedMan: constType = {\n  rus: 'Ты прожил',\n  eng: \"You've lived for\"\n};\n\nexport const resultTextLivedWoman: constType = {\n  rus: 'Ты прожила',\n  eng: 'You have lived for'\n};\n\nexport const resultTextCons: constType = {\n  rus: 'что составляет',\n  eng: 'which is'\n};\n\nexport const resultTextAfterPers: constType = {\n  rus: 'от среднего срока жизни указанной тобой страны',\n  eng: 'of the average life of the country you specified'\n};\n\nexport const resultTextLucky: constType = {\n  rus: 'Похоже, тебе очень повезло.',\n  eng: \"It seems you're lucky.\"\n};\n\nexport const resultYearsTextinTheTable: constType = {\n  rus: 'Тебе осталось прожить еще примерно',\n  eng: 'You have about'\n};\n\nexport const resultYearsTextInTheTableLuckyMan: constType = {\n  rus: 'Ты - счастливчик! Ты прожил больше среднего на',\n  eng: 'You are lucky! You lived more than average by'\n};\n\nexport const resultYearsTextInTheTableLuckyWooman: constType = {\n  rus: 'А ты счастливая! Ты прожила больше среднего на',\n  eng: 'You are lucky! You lived more than average by'\n};\n\nexport const resultTextOr: constType = {\n  rus: '... или',\n  eng: '... or'\n};\n\nexport const resultTextOr2: constType = {\n  rus: ', или...',\n  eng: ', or...'\n};\n\nexport const resultTextWeek: constType = {\n  rus: 'недель.',\n  eng: 'weeks.'\n};\n\nexport const resultTextFinal: constType = {\n  rus: 'Цени свою жизнь!',\n  eng: 'Appreciate your life!'\n};\n\nexport const resultTextFinalLucky: constType = {\n  rus: 'Не останавливайся на достигнутом!',\n  eng: \"Don't stop there!\"\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"color\":\"styles_color__B6C7q\"};","import React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport inflection from '../../../../utils/inflection';\n\nimport {\n  selectChosenLang,\n  selectChosenSex,\n  selectSearchItem,\n  selectStatYear,\n  selectUserYears,\n  selectValueYears\n} from '../../../../store/Search/selectors/selectors';\n\nimport { formSexList } from '../../../../constants/form';\nimport {\n  resultText1,\n  resultTextAfterPers,\n  resultTextCons,\n  resultTextData,\n  resultTextFor,\n  resultTextIs,\n  resultTextLivedMan,\n  resultTextLivedWoman,\n  resultTextLucky,\n  resultTextMan,\n  resultTextWho,\n  resultTextWoman,\n  resultTextYearRus\n} from '../../../../constants/result';\n\nimport styles from './styles.module.css';\n\nexport const ResultText: FC = () => {\n  const country = useSelector(selectSearchItem);\n  const sex = useSelector(selectChosenSex);\n  const lang = useSelector(selectChosenLang);\n  const valueYears = useSelector(selectValueYears);\n  const statYears = useSelector(selectStatYear);\n  const userYears = useSelector(selectUserYears);\n\n  return (\n    <h2>\n      {country} {resultText1[lang]}{' '}\n      {sex === formSexList.rus[0] || sex === formSexList.eng[0]\n        ? resultTextMan[lang]\n        : ''}\n      {sex === formSexList.rus[1] || sex === formSexList.eng[1]\n        ? resultTextWoman[lang]\n        : ''}\n      {sex === formSexList.eng[2] || sex === formSexList.rus[2] ? '' : ''}{' '}\n      {resultTextIs[lang]}{' '}\n      <span className={styles.color}>{inflection(valueYears, lang)}</span>\n      .\n      <br />\n      {resultTextData[lang]} {resultTextWho[lang]} {resultTextFor[lang]}{' '}\n      {statYears} {resultTextYearRus[lang]}.\n      <br />\n      {userYears > valueYears && resultTextLucky[lang]}{' '}\n      {sex === formSexList.rus[0] ||\n      sex === formSexList.eng[0] ||\n      sex === formSexList.eng[2] ||\n      sex === formSexList.rus[2]\n        ? resultTextLivedMan[lang]\n        : ''}{' '}\n      {sex === formSexList.rus[1] || sex === formSexList.eng[1]\n        ? resultTextLivedWoman[lang]\n        : ''}{' '}\n      <span className={styles.color}>{inflection(userYears, lang)}</span>,{' '}\n      {resultTextCons[lang]}{' '}\n      <span className={styles.color}>\n        {((userYears / valueYears) * 100).toFixed(1)}%\n      </span>{' '}\n      {resultTextAfterPers[lang]}.\n    </h2>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tableWrapper\":\"styles_tableWrapper__U6QA4\",\"tableWrapperAnime\":\"styles_tableWrapperAnime__R7Qtk\",\"anime\":\"styles_anime__7p1Dm\",\"resultWrapper\":\"styles_resultWrapper__XGay5\",\"showInfoWrapper\":\"styles_showInfoWrapper__pAjXS\"};","import React, { memo, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport { Button } from '../../ui/Button';\nimport { WeeksTable } from '../WeeksTable';\nimport { ResultText } from './ResultText';\n\nimport inflection from '../../../utils/inflection';\n\nimport {\n  selectChosenLang,\n  selectChosenSex,\n  selectUserYears,\n  selectValueYears\n} from '../../../store/Search/selectors/selectors';\nimport { form, result } from '../../../store/Search/ducks';\n\nimport { formSexList } from '../../../constants/form';\nimport {\n  resultButton,\n  resultTextFinal,\n  resultTextFinalLucky,\n  resultTextOr,\n  resultTextOr2,\n  resultTextWeek,\n  resultYearsTextinTheTable,\n  resultYearsTextInTheTableLuckyMan,\n  resultYearsTextInTheTableLuckyWooman\n} from '../../../constants/result';\n\nimport styles from './styles.module.css';\n\ntype StateItemType = 'table' | 'years' | 'weeks' | 'final';\ntype StateType = StateItemType[];\n\nconst Result: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const sex = useSelector(selectChosenSex);\n  const lang = useSelector(selectChosenLang);\n  const valueYears = useSelector(selectValueYears);\n  const userYears = useSelector(selectUserYears);\n\n  const height = useMemo(\n    () =>\n      userYears < valueYears\n        ? `${valueYears * 7 - 1}px`\n        : `${userYears * 7 - 1}px`,\n    []\n  );\n\n  const states: StateType = ['table', 'years', 'weeks', 'final'];\n  const [show, setShow] = useState<StateItemType>(states[0]);\n\n  const backHandler = () => {\n    dispatch(result(false));\n    dispatch(form(true));\n  };\n\n  const changeResultInfo = () => {\n    if (show === states[states.length - 1]) {\n      setShow(states[0]);\n    } else {\n      const curIndex = states.indexOf(show);\n      setShow(states[curIndex + 1]);\n    }\n  };\n\n  return (\n    <section className={styles.resultWrapper}>\n      <ResultText />\n      <div\n        className={clsx(\n          styles.tableWrapper,\n          show === 'table' && styles.tableWrapperAnime\n        )}\n        onClick={changeResultInfo}\n      >\n        {show === 'table' && (\n          <WeeksTable valueYears={valueYears} userYears={userYears} />\n        )}\n\n        {show === 'years' && (\n          <div className={styles.showInfoWrapper} style={{ height: height }}>\n            {userYears < valueYears ? (\n              <h2>\n                {resultYearsTextinTheTable[lang]}\n                <span>{inflection(valueYears - userYears, lang)}</span>\n                {resultTextOr2[lang]}\n              </h2>\n            ) : (\n              <h2>\n                {sex === formSexList.rus[0] ||\n                sex === formSexList.eng[0] ||\n                sex === formSexList.eng[2] ||\n                sex === formSexList.rus[2]\n                  ? resultYearsTextInTheTableLuckyMan[lang]\n                  : resultYearsTextInTheTableLuckyWooman[lang]}\n                <span>{inflection(userYears - valueYears, lang)}</span>\n              </h2>\n            )}\n          </div>\n        )}\n\n        {show === 'weeks' && (\n          <div className={styles.showInfoWrapper} style={{ height: height }}>\n            {userYears < valueYears ? (\n              <h2>\n                {resultTextOr[lang]}\n                <span>{((valueYears - userYears) * 52).toFixed()}</span>\n                {resultTextWeek[lang]}\n              </h2>\n            ) : (\n              <h2>\n                {resultTextOr[lang]}\n                <span>{((userYears - valueYears) * 52).toFixed()}</span>\n                {resultTextWeek[lang]}\n              </h2>\n            )}\n          </div>\n        )}\n\n        {show === 'final' && (\n          <div className={styles.showInfoWrapper} style={{ height: height }}>\n            {userYears < valueYears ? (\n              <h2>{resultTextFinal[lang]}</h2>\n            ) : (\n              <h2>{resultTextFinalLucky[lang]}</h2>\n            )}\n          </div>\n        )}\n      </div>\n\n      <Button\n        buttonText={resultButton[lang]}\n        buttonOnClickHandler={backHandler}\n      />\n    </section>\n  );\n};\n\nexport default memo(Result);\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;"],"names":["WeeksTable","valueYears","userYears","roundUserYears","useMemo","Math","ceil","tableCols","i","push","className","styles","height","restWeeks","floor","tableColsRest","clsx","rowsNum","arrToRender","tableRows","tableInners","numInn","lang","num","toFixed","resultButton","rus","eng","resultText1","resultTextMan","resultTextWoman","resultTextIs","resultTextData","resultTextYearRus","resultTextWho","resultTextFor","resultTextLivedMan","resultTextLivedWoman","resultTextCons","resultTextAfterPers","resultTextLucky","resultYearsTextinTheTable","resultYearsTextInTheTableLuckyMan","resultYearsTextInTheTableLuckyWooman","resultTextOr","resultTextOr2","resultTextWeek","resultTextFinal","resultTextFinalLucky","ResultText","country","useSelector","selectSearchItem","sex","selectChosenSex","selectChosenLang","selectValueYears","statYears","selectStatYear","selectUserYears","formSexList","inflection","Result","dispatch","useDispatch","states","useState","show","setShow","onClick","length","curIndex","indexOf","style","Button","buttonText","buttonOnClickHandler","result","form","memo","r","e","t","f","n","Array","isArray","arguments"],"sourceRoot":""}