{"version":3,"sources":["components/Form/Form.module.css","components/WeeksTable/WeeksTable.module.css","components/Result/assets/ResultText/ResultText.module.css","components/Disclaimer/Disclaimer.module.css","components/Result/Result.module.css","components/App/App.module.css","ui/Button/Button.module.css","constants/app.ts","store/MainReducer/constants.ts","store/MainReducer/actions.ts","ui/Select/Select.tsx","ui/Button/Button.tsx","constants/disclaimer.ts","components/Disclaimer/Disclaimer.tsx","constants/form.ts","utils/currentSexForSearch.ts","components/Form/Form.tsx","constants/result.ts","components/WeeksTable/WeeksTable.tsx","components/Result/assets/ResultText/ResultText.tsx","components/Result/Result.tsx","components/App/App.tsx","store/MainReducer/MainReducer.ts","store/RootReducer.ts","index.tsx"],"names":["module","exports","appLang","rus","eng","OPEN_FORM","OPEN_RESULT","CHOSE_COUNTRY","CHOSE_SEX","CHOSE_BIRTH_DATE","CHOSE_LANG","SAVE_RESULT","openForm","formFlag","type","openResult","resultFlag","Select","title","onChange","list","currentValue","value","map","el","Button","buttonText","buttonOnClickHandler","onClick","className","styles","button","DisclaimerText","DisclaimerButtonText","Disclaimer","lang","dispatch","useDispatch","disclaimerText","split","length","text","trim","buttonWrapper","formNames","formTitle","formSex","formSexList","formButton","formDate","currentSexForSearch","currentSex","toLocaleLowerCase","Form","store","useState","format","birthDate","localBirthDate","setLocalBirthDate","formComponent","subTitle","currentLang","formWrapper","formRow","event","chosenCountry","target","countriesList","chosenSex","valueAsDate","totalData","data","fact","filter","dims","COUNTRY","SEX","GHO","sort","a","b","YEAR","valueYears","Number","Value","statYear","saveResult","resultButton","resultIn","resultText1","resultTextMan","resultTextWoman","resultTextIs","resultTextYears","resultTextData","resultTextYearRus","resultTextWho","resultTextFor","resultTextLivedMan","resultTextLivedWoman","resultTextCons","resultTextAfterPers","WeeksTable","userYears","roundUserYears","Math","ceil","tableCols","i","push","tableCell","height","restWeeks","floor","tableColsRest","clsx","tableFullCellRest","weeksTableWrapper","rowsNum","arrToRender","row","tableFullCell","tableInners","ResultText","color","toFixed","Result","resultWrapper","tableWrapper","App","storeState","useSelector","main","appWrapper","header","chosenLang","Object","values","dataCountriesList","Array","from","Set","InitialState","currentDate","Date","keys","RootReducer","combineReducers","state","action","end","getTime","start","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06204587.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formComponent\":\"Form_formComponent__f3zp3\",\"formWrapper\":\"Form_formWrapper__1ZjUZ\",\"formRow\":\"Form_formRow__tzTQf\",\"subTitle\":\"Form_subTitle__3xQx5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableCell\":\"WeeksTable_tableCell__30vVm\",\"tableFullCell\":\"WeeksTable_tableFullCell__1KuKw\",\"tableFullCellRest\":\"WeeksTable_tableFullCellRest__2Np6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color\":\"ResultText_color__33ocw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"disclaimerText\":\"Disclaimer_disclaimerText__1qxLh\",\"buttonWrapper\":\"Disclaimer_buttonWrapper__1ywmN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableWrapper\":\"Result_tableWrapper__2lkuz\",\"resultWrapper\":\"Result_resultWrapper__HbqTI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__1FF17\",\"header\":\"App_header__2MS2l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1Y5Fm\"};","export const appLang = { rus: 'Рус', eng: 'Eng' };\n","export const OPEN_FORM = 'OPEN_FORM';\nexport const OPEN_RESULT = 'OPEN_RESULT';\n\nexport const CHOSE_COUNTRY = 'CHOSE_COUNTRY';\nexport const CHOSE_SEX = 'CHOSE_SEX';\nexport const CHOSE_BIRTH_DATE = 'CHOSE_BIRTH_DATE';\nexport const CHOSE_LANG = 'CHOSE_LANG';\n\nexport const SAVE_RESULT = 'SAVE_RESULT';\n","import {\n  OPEN_FORM,\n  CHOSE_COUNTRY,\n  CHOSE_SEX,\n  SAVE_RESULT,\n  CHOSE_BIRTH_DATE,\n  OPEN_RESULT,\n  CHOSE_LANG,\n} from './constants';\n\nexport const openForm = (formFlag: boolean) => {\n  return {\n    type: OPEN_FORM,\n    formFlag,\n  } as const;\n};\n\nexport const openResult = (resultFlag: boolean) => {\n  return {\n    type: OPEN_RESULT,\n    resultFlag,\n  } as const;\n};\n\nexport const choseCountry = (chosenCountry: string) => {\n  return {\n    type: CHOSE_COUNTRY,\n    chosenCountry,\n  } as const;\n};\n\nexport const choseSex = (chosenSex: string) => {\n  return {\n    type: CHOSE_SEX,\n    chosenSex,\n  } as const;\n};\n\nexport const saveResult = (valueYears: number, statYear: number) => {\n  return {\n    type: SAVE_RESULT,\n    valueYears,\n    statYear,\n  } as const;\n};\n\nexport const choseBirthDate = (birthDate: Date) => {\n  return {\n    type: CHOSE_BIRTH_DATE,\n    birthDate,\n  } as const;\n};\n\nexport const choseLang = (chosenLang: string) => {\n  return {\n    type: CHOSE_LANG,\n    chosenLang,\n  } as const;\n};\n\ntype openFormType = ReturnType<typeof openForm>;\ntype openResultType = ReturnType<typeof openResult>;\ntype choseCountryType = ReturnType<typeof choseCountry>;\ntype choseSexType = ReturnType<typeof choseSex>;\ntype saveResultType = ReturnType<typeof saveResult>;\ntype choseBirthDateType = ReturnType<typeof choseBirthDate>;\ntype choseLangType = ReturnType<typeof choseLang>;\n\nexport type ActionsType =\n  | openFormType\n  | openResultType\n  | choseCountryType\n  | choseSexType\n  | saveResultType\n  | choseBirthDateType\n  | choseLangType;\n","import React from 'react';\n\nimport { ISelect } from './types';\n\nconst Select: React.FC<ISelect> = ({ title, onChange, list, currentValue }) => {\n  return (\n    <>\n      {title && <label>{title}</label>}\n      <select onChange={onChange} value={currentValue}>\n        {list.map((el) => (\n          <option value={el} key={el}>\n            {el}\n          </option>\n        ))}\n      </select>\n    </>\n  );\n};\n\nexport default Select;\n","import React from 'react';\n\nimport { IButton } from './types';\n\nimport styles from './Button.module.css';\n\nconst Button: React.FC<IButton> = ({ buttonText, buttonOnClickHandler }) => {\n  return (\n    <button\n      type=\"button\"\n      onClick={buttonOnClickHandler}\n      className={styles.button}\n    >\n      {buttonText}\n    </button>\n  );\n};\n\nexport default Button;\n","export const DisclaimerText: any = {\n  rus: 'Многие не задумываются, сколько им еще осталось прожить. Я предлагаю тебе на это посмотреть. Надеюсь, ты задумаешься о том, как и на что ты тратишь самое дорогое, что есть у тебя в жизни, - твое время.',\n  eng: 'Many people do not think how long they still have to live. I suggest you look at this. I hope you will think about how and on what you spend the most precious thing in your life - your time.',\n};\n\nexport const DisclaimerButtonText: any = {\n  rus: 'Далее',\n  eng: 'Next',\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { openForm } from '../../store/MainReducer/actions';\n\nimport Button from '../../ui/Button';\n\nimport { DisclaimerText } from '../../constants/disclaimer';\nimport { DisclaimerButtonText } from '../../constants/disclaimer';\n\nimport { IDisclaimer } from './types';\n\nimport styles from './Disclaimer.module.css';\n\nconst Disclaimer: React.FC<IDisclaimer> = ({ lang }) => {\n  const dispatch = useDispatch();\n\n  const buttonOnClickHandler = () => {\n    dispatch(openForm(true));\n  };\n\n  return (\n    <>\n      <div className={styles.disclaimerText}>\n        {DisclaimerText[lang].split('.').map((el: any) => {\n          if (!el.length) return null;\n\n          const text = `${el.trim()}.`;\n\n          return (\n            <div key={el}>\n              <br />\n              <p>{text}</p>\n            </div>\n          );\n        })}\n      </div>\n      <div className={styles.buttonWrapper}>\n        <Button\n          buttonText={DisclaimerButtonText[lang]}\n          buttonOnClickHandler={buttonOnClickHandler}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Disclaimer;\n","export const formNames: any = {\n  rus: 'Страна',\n  eng: 'Country',\n};\n\nexport const formTitle: any = {\n  rus: 'Пожалуйста, заполни поля',\n  eng: 'Please, fill the form',\n};\n\nexport const formSex: any = {\n  rus: 'Пол',\n  eng: 'Sex',\n};\n\nexport const formSexList: any = {\n  rus: ['Муж', 'Жен', 'Другое'],\n  eng: ['Male', 'Female', 'Other'],\n};\n\nexport const formButton: any = {\n  rus: 'Рассчитать',\n  eng: 'Calculate',\n};\n\nexport const formDate: any = {\n  rus: 'Дата рождения',\n  eng: 'Birth date',\n};\n","const currentSexForSearch = (currentSex: string): string => {\n  if (\n    currentSex.toLocaleLowerCase() === 'male' ||\n    currentSex.toLocaleLowerCase() === 'муж'\n  ) {\n    return 'Male';\n  } else if (\n    currentSex.toLocaleLowerCase() === 'female' ||\n    currentSex.toLocaleLowerCase() === 'жен'\n  ) {\n    return 'Female';\n  }\n  return 'Both sexes';\n};\n\nexport default currentSexForSearch;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { format } from 'date-fns';\n\nimport {\n  formButton,\n  formDate,\n  formNames,\n  formSex,\n  formSexList,\n  formTitle,\n} from '../../constants/form';\n\nimport data from '../../data/data.json';\n\nimport {\n  choseBirthDate,\n  choseCountry,\n  choseSex,\n  openForm,\n  openResult,\n  saveResult,\n} from '../../store/MainReducer/actions';\nimport Button from '../../ui/Button';\nimport Select from '../../ui/Select';\nimport currentSexForSearch from '../../utils/currentSexForSearch';\n\nimport styles from './Form.module.css';\nimport { IForm } from './types';\n\nconst Form: React.FC<IForm> = ({ store }) => {\n  const dispatch = useDispatch();\n\n  const choseNewCountry = (event: any) => {\n    if (event.target.value) {\n      dispatch(choseCountry(event.target.value));\n    }\n  };\n\n  const choseNewSex = (event: any) => {\n    if (event.target.value) {\n      dispatch(choseSex(event.target.value));\n    }\n  };\n\n  const [localBirthDate, setLocalBirthDate] = useState(\n    format(store.birthDate, 'yyyy-MM-dd'),\n  );\n\n  const choseNewBirthDate = (event: any) => {\n    if (event.target.valueAsDate) {\n      dispatch(choseBirthDate(event.target.valueAsDate));\n    }\n    if (event.target.valueAsDate)\n      setLocalBirthDate(() => format(event.target.valueAsDate, 'yyyy-MM-dd'));\n  };\n\n  const calculateHandler = () => {\n    let currentSex = currentSexForSearch(store.chosenSex);\n\n    // range of relevant data by years\n    const releventRange = data.fact.filter(\n      (el) =>\n        el.dims.COUNTRY === store.chosenCountry &&\n        el.dims.SEX === currentSex &&\n        el.dims.GHO === 'Life expectancy at birth (years)',\n    );\n\n    // find the data for the latest year of the range\n    const totalData = releventRange.sort((a, b) =>\n      a.dims.YEAR > b.dims.YEAR ? -1 : 1,\n    )[0];\n\n    const valueYears = Number(totalData.Value);\n    const statYear = Number(totalData.dims.YEAR);\n\n    dispatch(saveResult(valueYears, statYear));\n    dispatch(openForm(false));\n    dispatch(openResult(true));\n  };\n\n  return (\n    <div className={styles.formComponent}>\n      <h2 className={styles.subTitle}>{formTitle[store.currentLang]}</h2>\n\n      <form className={styles.formWrapper}>\n        <div className={styles.formRow}>\n          <Select\n            onChange={choseNewCountry}\n            list={store.countriesList}\n            currentValue={store.chosenCountry}\n            title={formNames[store.currentLang]}\n          />\n        </div>\n\n        <div className={styles.formRow}>\n          <Select\n            onChange={choseNewSex}\n            list={formSexList[store.currentLang]}\n            currentValue={store.chosenSex}\n            title={formSex[store.currentLang]}\n          />\n        </div>\n\n        <div className={styles.formRow}>\n          <label>{formDate[store.currentLang]}</label>\n          <input\n            type=\"date\"\n            onChange={choseNewBirthDate}\n            value={localBirthDate}\n          />\n        </div>\n      </form>\n\n      <Button\n        buttonText={formButton[store.currentLang]}\n        buttonOnClickHandler={calculateHandler}\n      />\n    </div>\n  );\n};\n\nexport default Form;\n","export const resultButton: any = {\n  rus: 'Назад',\n  eng: 'Back',\n};\n\nexport const resultIn: any = {\n  rus: 'В',\n  eng: 'In',\n};\n\nexport const resultText1: any = {\n  rus: 'средняя продолжительность жизни',\n  eng: 'the average life expectancy',\n};\n\nexport const resultTextMan: any = {\n  rus: 'у мужчин',\n  eng: 'for men',\n};\n\nexport const resultTextWoman: any = {\n  rus: 'у женщин',\n  eng: 'for women',\n};\n\nexport const resultTextIs: any = {\n  rus: 'составляет',\n  eng: 'is',\n};\n\nexport const resultTextYears: any = {\n  rus: 'лет (года)',\n  eng: 'years',\n};\n\nexport const resultTextData: any = {\n  rus: 'Это данные',\n  eng: 'This is',\n};\n\nexport const resultTextYearRus: any = {\n  rus: 'год',\n  eng: '',\n};\n\nexport const resultTextWho: any = {\n  rus: 'ВОЗ',\n  eng: 'the WHO data',\n};\n\nexport const resultTextFor: any = {\n  rus: 'за',\n  eng: 'for',\n};\n\nexport const resultTextLivedMan: any = {\n  rus: 'Ты прожил',\n  eng: 'You have lived for',\n};\n\nexport const resultTextLivedWoman: any = {\n  rus: 'Ты прожила',\n  eng: 'You have lived for',\n};\n\nexport const resultTextCons: any = {\n  rus: 'что составляет',\n  eng: 'which is',\n};\n\nexport const resultTextAfterPers: any = {\n  rus: 'от среднего срока жизни указанной тобой страны',\n  eng: 'of the average life of the country you specified',\n};\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport { IWeeksTable } from './types';\n\nimport styles from './WeeksTable.module.css';\n\nconst WeeksTable: React.FC<IWeeksTable> = ({ valueYears, userYears }) => {\n  const roundUserYears = Math.ceil(userYears);\n\n  const tableCols = [];\n  for (let i = 0; i < 52; i++) {\n    tableCols.push(\n      <td className={styles.tableCell} height={3} key={i + 1000} />,\n    );\n  }\n\n  const restWeeks = Math.floor((1 - (roundUserYears - userYears)) * 52);\n  const tableColsRest: any[] = [];\n  for (let i = 1; i <= 52; i++) {\n    tableColsRest.push(\n      <td\n        className={clsx(\n          styles.tableCell,\n          restWeeks > i && styles.tableFullCellRest,\n        )}\n        height={3}\n        key={i + 1000}\n      />,\n    );\n  }\n\n  const tableInners = (rowsNum: number, tableCols: any[]) => {\n    const arrToRender = [];\n    for (let i = 1; i <= rowsNum; i++) {\n      arrToRender.push(\n        <tr\n          key={i + 1}\n          className={clsx(styles.row, userYears > i && styles.tableFullCell)}\n        >\n          {i === roundUserYears ? tableColsRest : tableCols}\n        </tr>,\n      );\n    }\n    return arrToRender;\n  };\n\n  return (\n    <div className={styles.weeksTableWrapper}>\n      <table>\n        <tbody>{tableInners(valueYears, tableCols)}</tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default WeeksTable;\n","import React from 'react';\nimport { formSexList } from '../../../../constants/form';\n\nimport {\n  resultIn,\n  resultText1,\n  resultTextAfterPers,\n  resultTextCons,\n  resultTextData,\n  resultTextFor,\n  resultTextIs,\n  resultTextLivedMan,\n  resultTextLivedWoman,\n  resultTextMan,\n  resultTextWho,\n  resultTextWoman,\n  resultTextYearRus,\n  resultTextYears,\n} from '../../../../constants/result';\n\nimport { IResultText } from './types';\n\nimport styles from './ResultText.module.css';\n\nconst ResultText: React.FC<IResultText> = ({ store }) => {\n  return (\n    <h2>\n      {resultIn[store.currentLang]} {store.chosenCountry}{' '}\n      {resultText1[store.currentLang]}{' '}\n      {store.chosenSex === formSexList.rus[0] ||\n      store.chosenSex === formSexList.eng[0]\n        ? resultTextMan[store.currentLang]\n        : ''}\n      {store.chosenSex === formSexList.rus[1] ||\n      store.chosenSex === formSexList.eng[1]\n        ? resultTextWoman[store.currentLang]\n        : ''}\n      {store.chosenSex === formSexList.eng[2] ||\n      store.chosenSex === formSexList.rus[2]\n        ? ''\n        : ''}{' '}\n      {resultTextIs[store.currentLang]}{' '}\n      <span className={styles.color}>{store.valueYears}</span>{' '}\n      {resultTextYears[store.currentLang]}.\n      <br />\n      {resultTextData[store.currentLang]} {resultTextWho[store.currentLang]}{' '}\n      {resultTextFor[store.currentLang]} {store.statYear}{' '}\n      {resultTextYearRus[store.currentLang]}.\n      <br />\n      {store.chosenSex === formSexList.rus[0] ||\n      store.chosenSex === formSexList.eng[0] ||\n      store.chosenSex === formSexList.eng[2] ||\n      store.chosenSex === formSexList.rus[2]\n        ? resultTextLivedMan[store.currentLang]\n        : ''}{' '}\n      {store.chosenSex === formSexList.rus[1] ||\n      store.chosenSex === formSexList.eng[1]\n        ? resultTextLivedWoman[store.currentLang]\n        : ''}{' '}\n      <span className={styles.color}>{store.userYears.toFixed(1)}</span>{' '}\n      {resultTextYears[store.currentLang]}, {resultTextCons[store.currentLang]}{' '}\n      <span className={styles.color}>\n        {((store.userYears / store.valueYears) * 100).toFixed(1)}%\n      </span>{' '}\n      {resultTextAfterPers[store.currentLang]}.\n    </h2>\n  );\n};\n\nexport default ResultText;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { resultButton } from '../../constants/result';\n\nimport { openForm, openResult } from '../../store/MainReducer/actions';\n\nimport Button from '../../ui/Button';\nimport WeeksTable from '../WeeksTable';\n\nimport { IResult } from './types';\n\nimport styles from './Result.module.css';\nimport ResultText from './assets/ResultText';\n\nconst Result: React.FC<IResult> = ({ store }) => {\n  const dispatch = useDispatch();\n\n  const backHandler = () => {\n    dispatch(openResult(false));\n    dispatch(openForm(true));\n  };\n\n  return (\n    <div className={styles.resultWrapper}>\n      <ResultText store={store} />\n      <div className={styles.tableWrapper}>\n        <WeeksTable valueYears={store.valueYears} userYears={store.userYears} />\n      </div>\n\n      <Button\n        buttonText={resultButton[store.currentLang]}\n        buttonOnClickHandler={backHandler}\n      />\n    </div>\n  );\n};\n\nexport default Result;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { appLang } from '../../constants/app';\n\nimport { choseLang } from '../../store/MainReducer/actions';\n\nimport { AppStateType } from '../../store/RootReducer';\nimport { InitialMainReducerType } from '../../store/MainReducer/types';\n\nimport Select from '../../ui/Select';\n\nimport Disclaimer from '../Disclaimer';\nimport Form from '../Form';\nimport Result from '../Result';\n\nimport styles from './App.module.css';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const storeState = useSelector<AppStateType, InitialMainReducerType>(\n    (store) => store.main,\n  );\n\n  const changeLang = (event: any) => {\n    if (event.target.value) {\n      dispatch(choseLang(event.target.value));\n    }\n  };\n\n  return (\n    <div className={styles.appWrapper}>\n      <header className={styles.header}>\n        <Select\n          onChange={changeLang}\n          list={Object.values(appLang)}\n          currentValue={\n            storeState.currentLang === 'eng'\n              ? Object.values(appLang)[1]\n              : Object.values(appLang)[0]\n          }\n        />\n      </header>\n\n      {!storeState.formFlag && !storeState.resultFlag && (\n        <Disclaimer lang={storeState.currentLang} />\n      )}\n\n      {storeState.formFlag && !storeState.resultFlag && (\n        <Form store={storeState} />\n      )}\n\n      {!storeState.formFlag && storeState.resultFlag && (\n        <Result store={storeState} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import {\n  OPEN_FORM,\n  CHOSE_COUNTRY,\n  CHOSE_SEX,\n  SAVE_RESULT,\n  CHOSE_BIRTH_DATE,\n  OPEN_RESULT,\n  CHOSE_LANG,\n} from './constants';\nimport { formSexList } from '../../constants/form';\nimport { appLang } from '../../constants/app';\n\nimport data from '../../data/data.json';\n\nimport { InitialMainReducerType } from './types';\n\nimport { ActionsType } from './actions';\n\nconst dataCountriesList = Array.from(\n  new Set(data.fact.map((el) => el.dims.COUNTRY)),\n);\n\nconst InitialState: InitialMainReducerType = {\n  formFlag: false,\n  resultFlag: false,\n  countriesList: dataCountriesList,\n  chosenCountry: dataCountriesList[0],\n  chosenSex: formSexList.rus[0],\n  valueYears: 0,\n  statYear: 0,\n  currentDate: new Date(),\n  birthDate: new Date(),\n  userYears: 0,\n  currentLang: Object.keys(appLang)[0],\n};\n\nexport const MainReducer = (\n  state = InitialState,\n  action: ActionsType,\n): typeof state => {\n  switch (action.type) {\n    case OPEN_FORM:\n      return { ...state, formFlag: action.formFlag };\n\n    case OPEN_RESULT:\n      return { ...state, resultFlag: action.resultFlag };\n\n    case CHOSE_COUNTRY:\n      return { ...state, chosenCountry: action.chosenCountry };\n\n    case CHOSE_SEX:\n      return { ...state, chosenSex: action.chosenSex };\n\n    case SAVE_RESULT:\n      return {\n        ...state,\n        valueYears: action.valueYears,\n        statYear: action.statYear,\n      };\n\n    case CHOSE_BIRTH_DATE:\n      const end = state.currentDate.getTime();\n      const start = action.birthDate.getTime();\n      const userYears = (end - start) / 1000 / 60 / 60 / 24 / 365;\n      return { ...state, birthDate: action.birthDate, userYears: userYears };\n\n    case CHOSE_LANG:\n      return {\n        ...state,\n        currentLang:\n          action.chosenLang === 'Eng'\n            ? Object.keys(appLang)[1]\n            : Object.keys(appLang)[0],\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { MainReducer } from './MainReducer/MainReducer';\n\nexport const RootReducer = combineReducers({\n  main: MainReducer,\n});\n\nexport type AppStateType = ReturnType<typeof RootReducer>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { compose, createStore } from 'redux';\n\nimport App from './components/App';\nimport { RootReducer } from './store/RootReducer';\n\nimport './index.css';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(RootReducer, composeEnhancers());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}