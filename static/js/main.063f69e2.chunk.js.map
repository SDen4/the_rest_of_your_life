{"version":3,"sources":["store/Search/selectors/selectors.ts","constants/app.ts","ui/Select/Select.module.css","components/Disclaimer/Disclaimer.module.css","ui/Loader/Loader.module.css","components/App/App.module.css","constants/form.ts","ui/Button/Button.tsx","ui/Select/Select.tsx","ui/Button/Button.module.css","constants/disclaimer.ts","components/Disclaimer/Disclaimer.tsx","ui/Loader/Loader.tsx","components/App/App.tsx","store/RootReducer.ts","utils/api.ts","utils/currentSexForSearch.ts","store/Search/sagas/saga.ts","store/RootSaga.ts","index.tsx","store/Search/ducks/duck.ts"],"names":["selectSearchItem","createSelector","store","main","searchItem","selectChosenSex","chosenSex","selectChosenLang","chosenLang","selectLoadingFlag","loadingFlag","selectFormFlag","formFlag","selectResultFlag","resultFlag","selectValueYears","savedResult","valueYears","selectStatYear","statYear","selectBirthDate","savedBirthDate","birthDate","selectUserYears","userYears","selectCurrentDate","savedInitData","currentDate","selectCountriesList","countriesList","selectCountry","choseCountryItem","appLang","rus","eng","module","exports","formNames","formTitle","formSex","formSexList","formButton","formDate","Button","buttonText","buttonOnClickHandler","type","onClick","className","styles","button","Select","title","onChange","list","currentValue","label","value","select","map","el","DisclaimerText","DisclaimerButtonText","Disclaimer","lang","dispatch","useDispatch","disclaimerText","buttonWrapper","form","Loader","classes","loaderWrapper","ldsDualRing","LazyResult","React","lazy","LazyForm","App","useSelector","loading","useState","appHeight","setAppHeight","useEffect","window","innerHeight","appWrapper","style","minHeight","header","event","target","choseLang","Object","keys","values","fallback","RootReducer","combineReducers","mainRootReducer","API","axios","create","baseURL","currentSexForSearch","currentSex","toLocaleLowerCase","getSearchItem","getBirthDate","rootSearchSaga","getData","countryName","a","params","URLSearchParams","append","config","headers","post","then","res","data","response","country","sex","finalCountry","put","toString","payload","translatedItem","status","translatedText","searchAdd","relevantRange","fact","filter","dims","COUNTRY","SEX","GHO","totalData","sort","b","YEAR","Number","Value","all","saveResult","result","action","end","start","getTime","saveBirthDate","takeEvery","searchRequestSaga","birthDateSaga","rootSaga","fork","saga","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","RootSaga","ReactDOM","render","document","getElementById","dataCountriesList","Array","from","Set","createAction","choseCountry","choseSex","createReducer","_state","Date"],"mappings":"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","file":"static/js/main.063f69e2.chunk.js","sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nimport { AppStateType } from '../../../store/RootReducer';\n\nexport const selectSearchItem = createSelector(\n  (store: AppStateType) => store.main.searchItem,\n  (searchItem) => searchItem\n);\n\nexport const selectChosenSex = createSelector(\n  (store: AppStateType) => store.main.chosenSex,\n  (chosenSex) => chosenSex\n);\n\nexport const selectChosenLang = createSelector(\n  (store: AppStateType) => store.main.chosenLang,\n  (chosenLang) => chosenLang\n);\n\nexport const selectLoadingFlag = createSelector(\n  (store: AppStateType) => store.main.loadingFlag,\n  (loadingFlag) => loadingFlag\n);\n\nexport const selectFormFlag = createSelector(\n  (store: AppStateType) => store.main.formFlag,\n  (formFlag) => formFlag\n);\n\nexport const selectResultFlag = createSelector(\n  (store: AppStateType) => store.main.resultFlag,\n  (resultFlag) => resultFlag\n);\n\nexport const selectValueYears = createSelector(\n  (store: AppStateType) => store.main.savedResult.valueYears,\n  (valueYears) => valueYears\n);\n\nexport const selectStatYear = createSelector(\n  (store: AppStateType) => store.main.savedResult.statYear,\n  (chosenLang) => chosenLang\n);\n\nexport const selectBirthDate = createSelector(\n  (store: AppStateType) => store.main.savedBirthDate.birthDate,\n  (birthDate) => birthDate\n);\n\nexport const selectUserYears = createSelector(\n  (store: AppStateType) => store.main.savedBirthDate.userYears,\n  (userYears) => userYears\n);\n\nexport const selectCurrentDate = createSelector(\n  (store: AppStateType) => store.main.savedInitData.currentDate,\n  (currentDate) => currentDate\n);\n\nexport const selectCountriesList = createSelector(\n  (store: AppStateType) => store.main.savedInitData.countriesList,\n  (countriesList) => countriesList\n);\n\nexport const selectCountry = createSelector(\n  (store: AppStateType) => store.main.choseCountryItem,\n  (choseCountryItem) => choseCountryItem\n);\n","export type constType = { [key: string]: string };\n\nexport const appLang: constType = { rus: 'Рус', eng: 'Eng' };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__3PL6i\",\"label\":\"Select_label__2UJcy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"disclaimerText\":\"Disclaimer_disclaimerText__1qxLh\",\"buttonWrapper\":\"Disclaimer_buttonWrapper__1ywmN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderWrapper\":\"Loader_loaderWrapper__7w3wI\",\"ldsDualRing\":\"Loader_ldsDualRing__3TscM\",\"lds-dual-ring\":\"Loader_lds-dual-ring__lyjMd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__1FF17\",\"header\":\"App_header__2MS2l\"};","export type constType = { [key: string]: string };\nexport type constArrType = { [key: string]: string[] };\n\nexport const formNames: constType = {\n  rus: 'Страна',\n  eng: 'Country'\n};\n\nexport const formTitle: constType = {\n  rus: 'Пожалуйста, заполни поля',\n  eng: 'Please, fill the form'\n};\n\nexport const formSex: constType = {\n  rus: 'Пол',\n  eng: 'Sex'\n};\n\nexport const formSexList: constArrType = {\n  rus: ['Муж', 'Жен', 'Другое'],\n  eng: ['Male', 'Female', 'Other']\n};\n\nexport const formButton: constType = {\n  rus: 'Рассчитать',\n  eng: 'Calculate'\n};\n\nexport const formDate: constType = {\n  rus: 'Дата рождения',\n  eng: 'Birth date'\n};\n","import React from 'react';\n\nimport { IButton } from './types';\n\nimport styles from './Button.module.css';\n\nconst Button: React.FC<IButton> = ({ buttonText, buttonOnClickHandler }) => {\n  return (\n    <button\n      type=\"button\"\n      onClick={buttonOnClickHandler}\n      className={styles.button}\n    >\n      {buttonText}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport { ISelect } from './types';\n\nimport styles from './Select.module.css';\n\nconst Select: React.FC<ISelect> = ({ title, onChange, list, currentValue }) => {\n  return (\n    <>\n      {title && <label className={styles.label}>{title}</label>}\n      <select\n        onChange={onChange}\n        value={currentValue}\n        className={styles.select}\n      >\n        {list.map((el) => (\n          <option value={el} key={el}>\n            {el}\n          </option>\n        ))}\n      </select>\n    </>\n  );\n};\n\nexport default Select;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1Y5Fm\"};","export type constType = { [key: string]: string };\n\nexport const DisclaimerText: constType = {\n  rus: 'Посмотри, сколько тебе еще осталось',\n  eng: 'Look at the rest of your life'\n};\n\nexport const DisclaimerButtonText: constType = {\n  rus: 'Далее',\n  eng: 'Next'\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Button from '../../ui/Button';\n\nimport { DisclaimerText } from '../../constants/disclaimer';\nimport { DisclaimerButtonText } from '../../constants/disclaimer';\n\nimport { IDisclaimer } from './types';\n\nimport styles from './Disclaimer.module.css';\nimport { form } from '../../store/Search/ducks';\n\nconst Disclaimer: React.FC<IDisclaimer> = ({ lang }) => {\n  const dispatch = useDispatch();\n\n  const buttonOnClickHandler = () => {\n    dispatch(form(true));\n  };\n\n  return (\n    <>\n      <div className={styles.disclaimerText}>\n        <div>\n          <p>{DisclaimerText[lang]}</p>\n        </div>\n      </div>\n\n      <div className={styles.buttonWrapper}>\n        <Button\n          buttonText={DisclaimerButtonText[lang]}\n          buttonOnClickHandler={buttonOnClickHandler}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Disclaimer;\n","import React from 'react';\n\nimport classes from './Loader.module.css';\n\nconst Loader = (): JSX.Element => {\n  return (\n    <div className={classes.loaderWrapper}>\n      <div className={classes.ldsDualRing}></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { Suspense, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { appLang } from '../../constants/app';\n\nimport { choseLang } from '../../store/Search/ducks';\n\nimport {\n  selectLoadingFlag,\n  selectChosenLang,\n  selectFormFlag,\n  selectResultFlag\n} from '../../store/Search/selectors/selectors';\n\nimport Select from '../../ui/Select';\nimport Disclaimer from '../Disclaimer';\nimport Loader from '../../ui/Loader';\n\nimport styles from './App.module.css';\n\nconst LazyResult = React.lazy(() => import('../Result'));\nconst LazyForm = React.lazy(() => import('../Form'));\n\nfunction App(): JSX.Element {\n  const dispatch = useDispatch();\n\n  const lang: string = useSelector(selectChosenLang);\n  const loading: boolean = useSelector(selectLoadingFlag);\n  const formFlag: boolean = useSelector(selectFormFlag);\n  const resultFlag: boolean = useSelector(selectResultFlag);\n\n  // app height\n  const [appHeight, setAppHeight] = useState<number>(0);\n  useEffect(() => {\n    setAppHeight(window.innerHeight);\n  }, []);\n\n  const changeLang = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (event.target.value) {\n      dispatch(\n        choseLang(\n          event.target.value === 'Eng'\n            ? Object.keys(appLang)[1]\n            : Object.keys(appLang)[0]\n        )\n      );\n    }\n  };\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className={styles.appWrapper} style={{ minHeight: appHeight }}>\n          <header className={styles.header}>\n            <Select\n              onChange={changeLang}\n              list={Object.values(appLang)}\n              currentValue={\n                lang === 'eng'\n                  ? Object.values(appLang)[1]\n                  : Object.values(appLang)[0]\n              }\n            />\n          </header>\n\n          {!formFlag && !resultFlag && <Disclaimer lang={lang} />}\n\n          {formFlag && !resultFlag && (\n            <Suspense fallback={<Loader />}>\n              <LazyForm />\n            </Suspense>\n          )}\n\n          {!formFlag && resultFlag && (\n            <Suspense fallback={<Loader />}>\n              <LazyResult />\n            </Suspense>\n          )}\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\n\nimport { mainRootReducer } from './Search/ducks';\n\nexport const RootReducer = combineReducers({\n  main: mainRootReducer\n});\n\nexport type AppStateType = ReturnType<typeof RootReducer>;\n","import axios from 'axios';\n\nexport const API = axios.create({\n  baseURL: 'https://text-translator2.p.rapidapi.com/'\n});\n","const currentSexForSearch = (currentSex: string): string => {\n  if (\n    currentSex.toLocaleLowerCase() === 'male' ||\n    currentSex.toLocaleLowerCase() === 'муж'\n  ) {\n    return 'Male';\n  } else if (\n    currentSex.toLocaleLowerCase() === 'female' ||\n    currentSex.toLocaleLowerCase() === 'жен'\n  ) {\n    return 'Female';\n  }\n  return 'Both sexes';\n};\n\nexport default currentSexForSearch;\n","import { all, put, select, takeEvery } from 'redux-saga/effects';\n\nimport {\n  form,\n  result,\n  saveBirthDate,\n  saveResult,\n  searchAdd,\n  searchRequestSaga\n} from '../ducks';\n\nimport data from '../../../data/data.json';\n\nimport { API } from '../../../utils/api';\nimport currentSexForSearch from '../../../utils/currentSexForSearch';\n\nimport {\n  selectChosenSex,\n  selectChosenLang,\n  selectCurrentDate,\n  selectCountry\n} from '../../Search/selectors/selectors';\n\nimport { loading, birthDateSaga } from '../ducks';\n\nimport { getBirthDateSagaType, translatedItemType } from '../types/typesSearch';\n\nasync function getData(countryName: string) {\n  const params = new URLSearchParams();\n  params.append('source_language', 'en');\n  params.append('target_language', 'ru');\n  params.append('text', `In ${countryName}`);\n\n  const config = {\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n      'x-rapidapi-host': 'text-translator2.p.rapidapi.com',\n      'x-rapidapi-key': '98974f94fdmshf0e666910f99f56p166f4ejsn57d787efb8c9'\n    }\n  };\n\n  const response = await API.post('translate', params, config).then(\n    (res) => res.data\n  );\n  return response;\n}\n\nfunction* getSearchItem() {\n  const country: string = yield select(selectCountry);\n  const sex: string = yield select(selectChosenSex);\n  const lang: string = yield select(selectChosenLang);\n\n  let finalCountry: string = yield `In ${country}`;\n\n  if (lang === 'rus') {\n    yield put({ type: loading.toString(), payload: true });\n\n    const translatedItem: translatedItemType = yield getData(country);\n\n    if (\n      translatedItem.status === 'success' &&\n      translatedItem.data.translatedText\n    ) {\n      finalCountry = yield translatedItem.data.translatedText;\n    }\n  }\n\n  yield put({\n    type: searchAdd.toString(),\n    payload: finalCountry\n  });\n\n  // from Form\n  const currentSex: string = yield currentSexForSearch(sex);\n\n  // range of relevant data by years\n  const relevantRange = data.fact.filter(\n    (el) =>\n      el.dims.COUNTRY === country &&\n      el.dims.SEX === currentSex &&\n      el.dims.GHO === 'Life expectancy at birth (years)'\n  );\n\n  // find the data for the latest year of the range\n  const totalData = relevantRange.sort((a, b) =>\n    a.dims.YEAR > b.dims.YEAR ? -1 : 1\n  )[0];\n\n  const valueYears = Number(totalData.Value);\n  const statYear = Number(totalData.dims.YEAR);\n\n  yield all([\n    put({ type: saveResult.toString(), payload: { valueYears, statYear } }),\n    put({ type: form.toString(), payload: false }),\n    put({ type: result.toString(), payload: true })\n  ]);\n}\n\nfunction* getBirthDate(action: getBirthDateSagaType) {\n  const birthDate: Date = yield action.payload;\n\n  const end: Date = yield select(selectCurrentDate);\n  const start: Date = yield birthDate;\n\n  const userYears: number = yield (end.getTime() - start.getTime()) /\n    1000 /\n    60 /\n    60 /\n    24 /\n    365;\n\n  yield put({\n    type: saveBirthDate.toString(),\n    payload: { birthDate, userYears }\n  });\n}\n\nexport function* rootSearchSaga(): Generator<unknown> {\n  yield takeEvery(searchRequestSaga, getSearchItem);\n  yield takeEvery(birthDateSaga, getBirthDate);\n}\n","import { fork, all } from 'redux-saga/effects';\n\nimport { rootSearchSaga } from './Search/sagas/saga';\n\nexport default function* rootSaga(): Generator<unknown> {\n  yield all([fork(rootSearchSaga)]);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport App from './components/App';\nimport { RootReducer } from './store/RootReducer';\nimport RootSaga from './store/RootSaga';\n\nimport './index.css';\n\nconst saga = createSagaMiddleware();\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(RootReducer, composeEnhancers(applyMiddleware(saga)));\n\nsaga.run(RootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","import { combineReducers } from 'redux';\nimport { createAction, createReducer } from '@reduxjs/toolkit';\n\nimport { formSexList } from '../../../constants/form';\nimport { appLang } from '../../../constants/app';\n\nimport { saveBirthDateType, saveResultType } from '../types/typesSearch';\n\nimport data from '../../../data/data.json';\n\nconst dataCountriesList = Array.from(\n  new Set(data.fact.map((el) => el.dims.COUNTRY))\n);\n\nconst main = 'main';\n\n// Actions ==========================\nexport const searchRequestSaga = createAction(`${main}/SEARCH_REQUEST`);\nexport const birthDateSaga = createAction<Date>(`${main}/BIRTH_DATE`);\n\nexport const searchAdd = createAction<string>(`${main}/SEARCH_ADD`);\nexport const choseCountry = createAction<string>(`${main}/CHOSE_COUNTRY`);\nexport const choseSex = createAction<string>(`${main}/CHOSE_SEX`);\nexport const choseLang = createAction<string>(`${main}/CHOSE_LANG`);\nexport const saveResult = createAction<saveResultType>(`${main}/SAVE_RESULT`);\nexport const saveBirthDate = createAction<saveBirthDateType>(\n  `${main}/SAVE_BIRTH`\n);\n\nexport const loading = createAction<boolean>(`${main}/LOADING`);\nexport const form = createAction<boolean>(`${main}/FORM_FLAG`);\nexport const result = createAction<boolean>(`${main}/RESULT_FLAG`);\n\n// Reducers ==========================\nconst searchItem = createReducer('', {\n  [searchAdd.toString()]: (_state, action) => action.payload\n});\n\nconst choseCountryItem = createReducer(dataCountriesList[0], {\n  [choseCountry.toString()]: (_state, action) => action.payload\n});\n\nconst chosenSex = createReducer(formSexList.rus[0], {\n  [choseSex.toString()]: (_state, action) => action.payload\n});\n\nconst chosenLang = createReducer(Object.keys(appLang)[0], {\n  [choseLang.toString()]: (_state, action) => action.payload\n});\n\nconst savedResult = createReducer(\n  {\n    valueYears: 0,\n    statYear: 0\n  },\n  {\n    [saveResult.toString()]: (_state, action) => action.payload\n  }\n);\n\nconst savedBirthDate = createReducer(\n  {\n    birthDate: new Date(),\n    userYears: 0\n  },\n  {\n    [saveBirthDate.toString()]: (_state, action) => action.payload\n  }\n);\n\nconst savedInitData = createReducer(\n  {\n    currentDate: new Date(),\n    countriesList: dataCountriesList\n  },\n  {}\n);\n\nconst loadingFlag = createReducer(false, {\n  [result.toString()]: () => false,\n  [loading.toString()]: (_state, action) => action.payload\n});\n\nconst formFlag = createReducer(false, {\n  [form.toString()]: (_state, action) => action.payload\n});\n\nconst resultFlag = createReducer(false, {\n  [result.toString()]: (_state, action) => action.payload,\n  [loading.toString()]: () => false\n});\n\n// Root Reducer\nconst mainRootReducer = combineReducers({\n  searchItem,\n  chosenSex,\n  choseCountryItem,\n  chosenLang,\n  savedResult,\n  savedBirthDate,\n  savedInitData,\n  loadingFlag,\n  formFlag,\n  resultFlag\n});\n\nexport default mainRootReducer;\n"],"sourceRoot":""}