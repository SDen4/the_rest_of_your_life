{"version":3,"sources":["store/Search/ducks/duck.ts","store/Search/selectors/selectors.ts","constants/app.ts","components/Disclaimer/styles.module.css","ui/Select/styles.module.css","ui/Loader/styles.module.css","constants/form.ts","ui/Button/Button.tsx","ui/Select/Select.tsx","ui/Button/styles.module.css","components/Header/styles.module.css","components/App/styles.module.css","constants/disclaimer.ts","components/Disclaimer/Disclaimer.tsx","components/Header/Header.tsx","ui/Loader/Loader.tsx","components/App/App.tsx","store/RootReducer.ts","utils/api.ts","utils/currentSexForSearch.ts","store/Search/sagas/saga.ts","store/RootSaga.ts","index.tsx"],"names":["dataCountriesList","Array","from","Set","data","fact","map","el","dims","COUNTRY","main","searchRequestSaga","createAction","birthDateSaga","searchAdd","choseCountry","choseSex","choseLang","saveResult","saveBirthDate","loading","form","result","searchItem","createReducer","toString","_state","action","payload","choseCountryItem","chosenSex","formSexList","rus","chosenLang","Object","keys","appLang","savedResult","valueYears","statYear","savedBirthDate","birthDate","Date","userYears","savedInitData","currentDate","countriesList","isLoading","isForm","isResult","mainRootReducer","combineReducers","selectSearchItem","createSelector","store","selectChosenSex","selectChosenLang","selectIsLoading","selectIsForm","selectIsResult","selectValueYears","selectStatYear","selectBirthDate","selectUserYears","selectCurrentDate","selectCountriesList","selectCountry","eng","module","exports","formNames","formTitle","formSex","formButton","formDate","Button","buttonText","buttonOnClickHandler","type","onClick","className","styles","button","Select","title","onChange","list","currentValue","label","value","select","memo","DisclaimerText","DisclaimerButtonText","Disclaimer","lang","dispatch","useDispatch","disclaimerText","buttonWrapper","Header","useSelector","header","event","target","values","Loader","document","getElementsByTagName","ReactDOM","createPortal","loaderWrapper","ldsDualRing","LazyResult","React","lazy","LazyForm","App","useState","appHeight","setAppHeight","useEffect","window","innerHeight","addEventListener","preventDefault","returnValue","appWrapper","style","minHeight","fallback","RootReducer","API","axios","create","baseURL","currentSexForSearch","currentSex","toLocaleLowerCase","getSearchItem","getBirthDate","rootSearchSaga","getData","countryName","a","params","URLSearchParams","append","config","headers","post","then","res","response","country","sex","finalCountry","put","translatedItem","status","translatedText","relevantRange","filter","SEX","totalData","sort","b","YEAR","Number","Value","all","end","start","getTime","takeEvery","rootSaga","fork","saga","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","RootSaga","render","getElementById"],"mappings":"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","file":"static/js/main.5cb8745a.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { createAction, createReducer } from '@reduxjs/toolkit';\n\nimport { formSexList } from '../../../constants/form';\nimport { appLang } from '../../../constants/app';\n\nimport { saveBirthDateType, saveResultType } from '../types/typesSearch';\n\nimport data from '../../../data/data.json';\n\nconst dataCountriesList = Array.from(\n  new Set(data.fact.map((el) => el.dims.COUNTRY))\n);\n\nconst main = 'main';\n\n// Actions ==========================\nexport const searchRequestSaga = createAction(`${main}/SEARCH_REQUEST`);\nexport const birthDateSaga = createAction<Date>(`${main}/BIRTH_DATE`);\n\nexport const searchAdd = createAction<string>(`${main}/SEARCH_ADD`);\nexport const choseCountry = createAction<string>(`${main}/CHOSE_COUNTRY`);\nexport const choseSex = createAction<string>(`${main}/CHOSE_SEX`);\nexport const choseLang = createAction<string>(`${main}/CHOSE_LANG`);\nexport const saveResult = createAction<saveResultType>(`${main}/SAVE_RESULT`);\nexport const saveBirthDate = createAction<saveBirthDateType>(\n  `${main}/SAVE_BIRTH`\n);\n\nexport const loading = createAction<boolean>(`${main}/IS_LOADING`);\nexport const form = createAction<boolean>(`${main}/IS_FORM`);\nexport const result = createAction<boolean>(`${main}/IS_RESULT`);\n\n// Reducers ==========================\nconst searchItem = createReducer('', {\n  [searchAdd.toString()]: (_state, action) => action.payload\n});\n\nconst choseCountryItem = createReducer(dataCountriesList[0], {\n  [choseCountry.toString()]: (_state, action) => action.payload\n});\n\nconst chosenSex = createReducer(formSexList.rus[0], {\n  [choseSex.toString()]: (_state, action) => action.payload\n});\n\nconst chosenLang = createReducer(Object.keys(appLang)[0], {\n  [choseLang.toString()]: (_state, action) => action.payload\n});\n\nconst savedResult = createReducer(\n  {\n    valueYears: 0,\n    statYear: 0\n  },\n  {\n    [saveResult.toString()]: (_state, action) => action.payload\n  }\n);\n\nconst savedBirthDate = createReducer(\n  {\n    birthDate: new Date(),\n    userYears: 0\n  },\n  {\n    [saveBirthDate.toString()]: (_state, action) => action.payload\n  }\n);\n\nconst savedInitData = createReducer(\n  {\n    currentDate: new Date(),\n    countriesList: dataCountriesList\n  },\n  {}\n);\n\nconst isLoading = createReducer(false, {\n  [result.toString()]: () => false,\n  [loading.toString()]: (_state, action) => action.payload\n});\n\nconst isForm = createReducer(false, {\n  [form.toString()]: (_state, action) => action.payload\n});\n\nconst isResult = createReducer(false, {\n  [result.toString()]: (_state, action) => action.payload,\n  [loading.toString()]: () => false\n});\n\n// Root Reducer\nconst mainRootReducer = combineReducers({\n  searchItem,\n  chosenSex,\n  choseCountryItem,\n  chosenLang,\n  savedResult,\n  savedBirthDate,\n  savedInitData,\n  isLoading,\n  isForm,\n  isResult\n});\n\nexport default mainRootReducer;\n","import { createSelector } from '@reduxjs/toolkit';\n\nimport { AppStateType } from '../../../store/RootReducer';\n\nexport const selectSearchItem = createSelector(\n  (store: AppStateType) => store.main.searchItem,\n  (searchItem) => searchItem\n);\n\nexport const selectChosenSex = createSelector(\n  (store: AppStateType) => store.main.chosenSex,\n  (chosenSex) => chosenSex\n);\n\nexport const selectChosenLang = createSelector(\n  (store: AppStateType) => store.main.chosenLang,\n  (chosenLang) => chosenLang\n);\n\nexport const selectIsLoading = createSelector(\n  (store: AppStateType) => store.main.isLoading,\n  (isLoading) => isLoading\n);\n\nexport const selectIsForm = createSelector(\n  (store: AppStateType) => store.main.isForm,\n  (isForm) => isForm\n);\n\nexport const selectIsResult = createSelector(\n  (store: AppStateType) => store.main.isResult,\n  (isResult) => isResult\n);\n\nexport const selectValueYears = createSelector(\n  (store: AppStateType) => store.main.savedResult.valueYears,\n  (valueYears) => valueYears\n);\n\nexport const selectStatYear = createSelector(\n  (store: AppStateType) => store.main.savedResult.statYear,\n  (chosenLang) => chosenLang\n);\n\nexport const selectBirthDate = createSelector(\n  (store: AppStateType) => store.main.savedBirthDate.birthDate,\n  (birthDate) => birthDate\n);\n\nexport const selectUserYears = createSelector(\n  (store: AppStateType) => store.main.savedBirthDate.userYears,\n  (userYears) => userYears\n);\n\nexport const selectCurrentDate = createSelector(\n  (store: AppStateType) => store.main.savedInitData.currentDate,\n  (currentDate) => currentDate\n);\n\nexport const selectCountriesList = createSelector(\n  (store: AppStateType) => store.main.savedInitData.countriesList,\n  (countriesList) => countriesList\n);\n\nexport const selectCountry = createSelector(\n  (store: AppStateType) => store.main.choseCountryItem,\n  (choseCountryItem) => choseCountryItem\n);\n","export type constType = { [key: string]: string };\n\nexport const appLang: constType = { rus: 'Рус', eng: 'Eng' };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"disclaimerText\":\"styles_disclaimerText__55OXi\",\"buttonWrapper\":\"styles_buttonWrapper__v7o4M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"styles_select__34GMS\",\"label\":\"styles_label__1Q3wM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderWrapper\":\"styles_loaderWrapper__2joYT\",\"ldsDualRing\":\"styles_ldsDualRing__v6tI0\",\"lds-dual-ring\":\"styles_lds-dual-ring__2AumA\"};","export type constType = { [key: string]: string };\nexport type constArrType = { [key: string]: string[] };\n\nexport const formNames: constType = {\n  rus: 'Страна',\n  eng: 'Country'\n};\n\nexport const formTitle: constType = {\n  rus: 'Пожалуйста, заполни поля',\n  eng: 'Please, fill the form'\n};\n\nexport const formSex: constType = {\n  rus: 'Пол',\n  eng: 'Sex'\n};\n\nexport const formSexList: constArrType = {\n  rus: ['Муж', 'Жен', 'Другое'],\n  eng: ['Male', 'Female', 'Other']\n};\n\nexport const formButton: constType = {\n  rus: 'Рассчитать',\n  eng: 'Calculate'\n};\n\nexport const formDate: constType = {\n  rus: 'Дата рождения',\n  eng: 'Birth date'\n};\n","import React, { FC } from 'react';\n\nimport styles from './styles.module.css';\n\ninterface IProps {\n  buttonText: string;\n  buttonOnClickHandler: () => void;\n}\n\nexport const Button: FC<IProps> = ({ buttonText, buttonOnClickHandler }) => {\n  return (\n    <button\n      type=\"button\"\n      onClick={buttonOnClickHandler}\n      className={styles.button}\n    >\n      {buttonText}\n    </button>\n  );\n};\n","import React, { memo } from 'react';\n\nimport styles from './styles.module.css';\n\ninterface IProps {\n  onChange: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n  list: string[];\n  currentValue: string;\n  title?: string;\n}\n\nconst Select: React.FC<IProps> = ({ title, onChange, list, currentValue }) => {\n  return (\n    <>\n      {title && <label className={styles.label}>{title}</label>}\n      <select\n        onChange={onChange}\n        value={currentValue}\n        className={styles.select}\n      >\n        {list.map((el) => (\n          <option value={el} key={el}>\n            {el}\n          </option>\n        ))}\n      </select>\n    </>\n  );\n};\n\nexport default memo(Select);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__2MhAC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__D7Cd9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"styles_appWrapper__1sS_S\"};","export type constType = { [key: string]: string };\n\nexport const DisclaimerText: constType = {\n  rus: 'Посмотри, сколько тебе еще осталось',\n  eng: 'Look at the rest of your life'\n};\n\nexport const DisclaimerButtonText: constType = {\n  rus: 'Далее',\n  eng: 'Next'\n};\n","import React, { FC } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { Button } from '../../ui/Button';\nimport { DisclaimerText } from '../../constants/disclaimer';\nimport { DisclaimerButtonText } from '../../constants/disclaimer';\n\nimport { form } from '../../store/Search/ducks';\n\nimport styles from './styles.module.css';\n\ninterface IProps {\n  lang: string;\n}\n\nexport const Disclaimer: FC<IProps> = ({ lang }) => {\n  const dispatch = useDispatch();\n\n  const buttonOnClickHandler = () => {\n    dispatch(form(true));\n  };\n\n  return (\n    <>\n      <div className={styles.disclaimerText}>\n        <p>{DisclaimerText[lang]}</p>\n      </div>\n\n      <div className={styles.buttonWrapper}>\n        <Button\n          buttonText={DisclaimerButtonText[lang]}\n          buttonOnClickHandler={buttonOnClickHandler}\n        />\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Select from '../../ui/Select';\n\nimport { choseLang } from '../../store/Search/ducks';\nimport { selectChosenLang } from '../../store/Search/selectors/selectors';\n\nimport { appLang } from '../../constants/app';\n\nimport styles from './styles.module.css';\n\nexport const Header = (): JSX.Element => {\n  const dispatch = useDispatch();\n\n  const lang = useSelector(selectChosenLang);\n\n  const changeLang = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (event.target.value) {\n      dispatch(\n        choseLang(\n          event.target.value === 'Eng'\n            ? Object.keys(appLang)[1]\n            : Object.keys(appLang)[0]\n        )\n      );\n    }\n  };\n\n  return (\n    <header className={styles.header}>\n      <Select\n        onChange={changeLang}\n        list={Object.values(appLang)}\n        currentValue={\n          lang === 'eng' ? Object.values(appLang)[1] : Object.values(appLang)[0]\n        }\n      />\n    </header>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport styles from './styles.module.css';\n\nexport const Loader = (): JSX.Element => {\n  const el = document.getElementsByTagName('body')[0];\n\n  return ReactDOM.createPortal(\n    <div className={styles.loaderWrapper}>\n      <div className={styles.ldsDualRing} />\n    </div>,\n    el\n  );\n};\n","import React, { Suspense, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport {\n  selectIsLoading,\n  selectChosenLang,\n  selectIsForm,\n  selectIsResult\n} from '../../store/Search/selectors/selectors';\n\nimport { Disclaimer } from '../Disclaimer';\nimport { Header } from '../Header';\nimport { Loader } from '../../ui/Loader';\n\nimport styles from './styles.module.css';\n\nconst LazyResult = React.lazy(() => import('../Result'));\nconst LazyForm = React.lazy(() => import('../Form'));\n\nfunction App(): JSX.Element {\n  const lang = useSelector(selectChosenLang);\n  const isLoading = useSelector(selectIsLoading);\n  const isForm = useSelector(selectIsForm);\n  const isResult = useSelector(selectIsResult);\n\n  // app height\n  const [appHeight, setAppHeight] = useState(0);\n  useEffect(() => {\n    setAppHeight(window.innerHeight);\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('beforeunload', (event) => {\n      event.preventDefault();\n      event.returnValue = '';\n    });\n  }, []);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <main className={styles.appWrapper} style={{ minHeight: appHeight }}>\n          <Header />\n\n          {!isForm && !isResult && <Disclaimer lang={lang} />}\n\n          {isForm && !isResult && (\n            <Suspense fallback={<Loader />}>\n              <LazyForm />\n            </Suspense>\n          )}\n\n          {!isForm && isResult && (\n            <Suspense fallback={<Loader />}>\n              <LazyResult />\n            </Suspense>\n          )}\n        </main>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\n\nimport { mainRootReducer } from './Search/ducks';\n\nexport const RootReducer = combineReducers({\n  main: mainRootReducer\n});\n\nexport type AppStateType = ReturnType<typeof RootReducer>;\n","import axios from 'axios';\n\nexport const API = axios.create({\n  baseURL: 'https://text-translator2.p.rapidapi.com/'\n});\n","const currentSexForSearch = (currentSex: string): string => {\n  if (\n    currentSex.toLocaleLowerCase() === 'male' ||\n    currentSex.toLocaleLowerCase() === 'муж'\n  ) {\n    return 'Male';\n  } else if (\n    currentSex.toLocaleLowerCase() === 'female' ||\n    currentSex.toLocaleLowerCase() === 'жен'\n  ) {\n    return 'Female';\n  }\n  return 'Both sexes';\n};\n\nexport default currentSexForSearch;\n","import { all, put, select, takeEvery } from 'redux-saga/effects';\n\nimport {\n  form,\n  result,\n  saveBirthDate,\n  saveResult,\n  searchAdd,\n  searchRequestSaga\n} from '../ducks';\n\nimport data from '../../../data/data.json';\n\nimport { API } from '../../../utils/api';\nimport currentSexForSearch from '../../../utils/currentSexForSearch';\n\nimport {\n  selectChosenSex,\n  selectChosenLang,\n  selectCurrentDate,\n  selectCountry\n} from '../../Search/selectors/selectors';\n\nimport { loading, birthDateSaga } from '../ducks';\n\nimport { getBirthDateSagaType, translatedItemType } from '../types/typesSearch';\n\nasync function getData(countryName: string) {\n  const params = new URLSearchParams();\n  params.append('source_language', 'en');\n  params.append('target_language', 'ru');\n  params.append('text', `In ${countryName}`);\n\n  const config = {\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n      'x-rapidapi-host': 'text-translator2.p.rapidapi.com',\n      'x-rapidapi-key': '98974f94fdmshf0e666910f99f56p166f4ejsn57d787efb8c9'\n    }\n  };\n\n  const response = await API.post('translate', params, config).then(\n    (res) => res.data\n  );\n  return response;\n}\n\nfunction* getSearchItem() {\n  const country: string = yield select(selectCountry);\n  const sex: string = yield select(selectChosenSex);\n  const lang: string = yield select(selectChosenLang);\n\n  let finalCountry: string = yield `In ${country}`;\n\n  if (lang === 'rus') {\n    yield put({ type: loading.toString(), payload: true });\n\n    const translatedItem: translatedItemType = yield getData(country);\n\n    if (\n      translatedItem.status === 'success' &&\n      translatedItem.data.translatedText\n    ) {\n      finalCountry = yield translatedItem.data.translatedText;\n    }\n  }\n\n  yield put({\n    type: searchAdd.toString(),\n    payload: finalCountry\n  });\n\n  // from Form\n  const currentSex: string = yield currentSexForSearch(sex);\n\n  // range of relevant data by years\n  const relevantRange = data.fact.filter(\n    (el) => el.dims.COUNTRY === country && el.dims.SEX === currentSex\n  );\n\n  // find the data for the latest year of the range\n  const totalData = relevantRange.sort((a, b) =>\n    a.dims.YEAR > b.dims.YEAR ? -1 : 1\n  )[0];\n\n  const valueYears = Number(totalData.Value);\n  const statYear = Number(totalData.dims.YEAR);\n\n  yield all([\n    put({ type: saveResult.toString(), payload: { valueYears, statYear } }),\n    put({ type: form.toString(), payload: false }),\n    put({ type: result.toString(), payload: true })\n  ]);\n}\n\nfunction* getBirthDate(action: getBirthDateSagaType) {\n  const birthDate: Date = yield action.payload;\n\n  const end: Date = yield select(selectCurrentDate);\n  const start: Date = yield birthDate;\n\n  const userYears: number = yield (end.getTime() - start.getTime()) /\n    1000 /\n    60 /\n    60 /\n    24 /\n    365;\n\n  yield put({\n    type: saveBirthDate.toString(),\n    payload: { birthDate, userYears }\n  });\n}\n\nexport function* rootSearchSaga(): Generator<unknown> {\n  yield takeEvery(searchRequestSaga, getSearchItem);\n  yield takeEvery(birthDateSaga, getBirthDate);\n}\n","import { fork, all } from 'redux-saga/effects';\n\nimport { rootSearchSaga } from './Search/sagas/saga';\n\nexport default function* rootSaga(): Generator<unknown> {\n  yield all([fork(rootSearchSaga)]);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport App from './components/App';\nimport { RootReducer } from './store/RootReducer';\nimport RootSaga from './store/RootSaga';\n\nimport './index.css';\n\nconst saga = createSagaMiddleware();\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(RootReducer, composeEnhancers(applyMiddleware(saga)));\n\nsaga.run(RootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}