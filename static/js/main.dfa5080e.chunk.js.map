{"version":3,"sources":["components/Form/Form.module.css","components/WeeksTable/WeeksTable.module.css","components/Result/Result.module.css","components/Result/assets/ResultText/ResultText.module.css","ui/Select/Select.module.css","components/Disclaimer/Disclaimer.module.css","components/App/App.module.css","ui/Button/Button.module.css","constants/app.ts","store/MainReducer/constants.ts","store/MainReducer/actions.ts","ui/Select/Select.tsx","ui/Button/Button.tsx","constants/disclaimer.ts","components/Disclaimer/Disclaimer.tsx","constants/form.ts","utils/currentSexForSearch.ts","components/Form/Form.tsx","constants/result.ts","components/WeeksTable/WeeksTable.tsx","utils/inflection.ts","components/Result/assets/ResultText/ResultText.tsx","components/Result/Result.tsx","components/App/App.tsx","store/MainReducer/MainReducer.ts","store/RootReducer.ts","index.tsx"],"names":["module","exports","appLang","rus","eng","OPEN_FORM","OPEN_RESULT","CHOSE_COUNTRY","CHOSE_SEX","CHOSE_BIRTH_DATE","CHOSE_LANG","SAVE_RESULT","openForm","formFlag","type","CONST","openResult","resultFlag","Select","title","onChange","list","currentValue","className","styles","label","value","select","map","el","Button","buttonText","buttonOnClickHandler","onClick","button","DisclaimerText","DisclaimerButtonText","Disclaimer","lang","dispatch","useDispatch","disclaimerText","buttonWrapper","formNames","formTitle","formSex","formSexList","formButton","formDate","currentSexForSearch","currentSex","toLocaleLowerCase","Form","store","useState","format","birthDate","localBirthDate","setLocalBirthDate","formComponent","subTitle","currentLang","formWrapper","formRow","event","chosenCountry","target","countriesList","chosenSex","clsx","dateWrapper","valueAsDate","totalData","data","fact","filter","dims","COUNTRY","SEX","GHO","sort","a","b","YEAR","valueYears","Number","Value","statYear","saveResult","resultButton","resultIn","resultText1","resultTextMan","resultTextWoman","resultTextIs","resultTextYears","resultTextData","resultTextYearRus","resultTextWho","resultTextFor","resultTextLivedMan","resultTextLivedWoman","resultTextCons","resultTextAfterPers","resultTextLucky","resultYearsTextinTheTable","resultTextYears2","resultYearsTextInTheTableLuckyMan","resultYearsTextInTheTableLuckyWooman","resultTextOr","resultTextWeek","resultTextFinal","resultTextFinalLucky","WeeksTable","userYears","roundUserYears","Math","ceil","tableCols","i","push","tableCell","height","restWeeks","floor","tableColsRest","tableFullCellRest","weeksTableWrapper","rowsNum","arrToRender","tableRows","row","tableFullCell","tableExtraCell","tableInners","inflection","numInn","num","toFixed","ResultText","color","Result","states","show","setShow","resultWrapper","tableWrapper","tableWrapperAnime","length","curIndex","indexOf","showInfoWrapper","style","App","storeState","useSelector","main","appWrapper","header","chosenLang","Object","values","dataCountriesList","Array","from","Set","InitialState","currentDate","Date","keys","RootReducer","combineReducers","state","action","end","getTime","start","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dfa5080e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formComponent\":\"Form_formComponent__f3zp3\",\"formWrapper\":\"Form_formWrapper__1ZjUZ\",\"formRow\":\"Form_formRow__tzTQf\",\"subTitle\":\"Form_subTitle__3xQx5\",\"dateWrapper\":\"Form_dateWrapper__3Esei\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableCell\":\"WeeksTable_tableCell__30vVm\",\"tableFullCell\":\"WeeksTable_tableFullCell__1KuKw\",\"tableFullCellRest\":\"WeeksTable_tableFullCellRest__2Np6n\",\"tableExtraCell\":\"WeeksTable_tableExtraCell__26vsx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableWrapper\":\"Result_tableWrapper__2lkuz\",\"tableWrapperAnime\":\"Result_tableWrapperAnime__2ubzh\",\"anime\":\"Result_anime__2LmMv\",\"resultWrapper\":\"Result_resultWrapper__HbqTI\",\"showInfoWrapper\":\"Result_showInfoWrapper__2Pkkb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color\":\"ResultText_color__33ocw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__3PL6i\",\"label\":\"Select_label__2UJcy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"disclaimerText\":\"Disclaimer_disclaimerText__1qxLh\",\"buttonWrapper\":\"Disclaimer_buttonWrapper__1ywmN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__1FF17\",\"header\":\"App_header__2MS2l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1Y5Fm\"};","export const appLang = { rus: 'Рус', eng: 'Eng' };\n","export const OPEN_FORM = 'OPEN_FORM';\nexport const OPEN_RESULT = 'OPEN_RESULT';\n\nexport const CHOSE_COUNTRY = 'CHOSE_COUNTRY';\nexport const CHOSE_SEX = 'CHOSE_SEX';\nexport const CHOSE_BIRTH_DATE = 'CHOSE_BIRTH_DATE';\nexport const CHOSE_LANG = 'CHOSE_LANG';\n\nexport const SAVE_RESULT = 'SAVE_RESULT';\n","import * as CONST from './constants';\n\nexport const openForm = (formFlag: boolean) => {\n  return {\n    type: CONST.OPEN_FORM,\n    formFlag,\n  } as const;\n};\n\nexport const openResult = (resultFlag: boolean) => {\n  return {\n    type: CONST.OPEN_RESULT,\n    resultFlag,\n  } as const;\n};\n\nexport const choseCountry = (chosenCountry: string) => {\n  return {\n    type: CONST.CHOSE_COUNTRY,\n    chosenCountry,\n  } as const;\n};\n\nexport const choseSex = (chosenSex: string) => {\n  return {\n    type: CONST.CHOSE_SEX,\n    chosenSex,\n  } as const;\n};\n\nexport const saveResult = (valueYears: number, statYear: number) => {\n  return {\n    type: CONST.SAVE_RESULT,\n    valueYears,\n    statYear,\n  } as const;\n};\n\nexport const choseBirthDate = (birthDate: Date) => {\n  return {\n    type: CONST.CHOSE_BIRTH_DATE,\n    birthDate,\n  } as const;\n};\n\nexport const choseLang = (chosenLang: string) => {\n  return {\n    type: CONST.CHOSE_LANG,\n    chosenLang,\n  } as const;\n};\n\ntype openFormType = ReturnType<typeof openForm>;\ntype openResultType = ReturnType<typeof openResult>;\ntype choseCountryType = ReturnType<typeof choseCountry>;\ntype choseSexType = ReturnType<typeof choseSex>;\ntype saveResultType = ReturnType<typeof saveResult>;\ntype choseBirthDateType = ReturnType<typeof choseBirthDate>;\ntype choseLangType = ReturnType<typeof choseLang>;\n\nexport type ActionsType =\n  | openFormType\n  | openResultType\n  | choseCountryType\n  | choseSexType\n  | saveResultType\n  | choseBirthDateType\n  | choseLangType;\n","import React from 'react';\n\nimport { ISelect } from './types';\n\nimport styles from './Select.module.css';\n\nconst Select: React.FC<ISelect> = ({ title, onChange, list, currentValue }) => {\n  return (\n    <>\n      {title && <label className={styles.label}>{title}</label>}\n      <select\n        onChange={onChange}\n        value={currentValue}\n        className={styles.select}\n      >\n        {list.map((el) => (\n          <option value={el} key={el}>\n            {el}\n          </option>\n        ))}\n      </select>\n    </>\n  );\n};\n\nexport default Select;\n","import React from 'react';\n\nimport { IButton } from './types';\n\nimport styles from './Button.module.css';\n\nconst Button: React.FC<IButton> = ({ buttonText, buttonOnClickHandler }) => {\n  return (\n    <button\n      type=\"button\"\n      onClick={buttonOnClickHandler}\n      className={styles.button}\n    >\n      {buttonText}\n    </button>\n  );\n};\n\nexport default Button;\n","export const DisclaimerText: any = {\n  rus: 'Посмотри, сколько тебе еще осталось',\n  eng: 'Look at the rest of your life',\n};\n\nexport const DisclaimerButtonText: any = {\n  rus: 'Далее',\n  eng: 'Next',\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { openForm } from '../../store/MainReducer/actions';\n\nimport Button from '../../ui/Button';\n\nimport { DisclaimerText } from '../../constants/disclaimer';\nimport { DisclaimerButtonText } from '../../constants/disclaimer';\n\nimport { IDisclaimer } from './types';\n\nimport styles from './Disclaimer.module.css';\n\nconst Disclaimer: React.FC<IDisclaimer> = ({ lang }) => {\n  const dispatch = useDispatch();\n\n  const buttonOnClickHandler = () => {\n    dispatch(openForm(true));\n  };\n\n  return (\n    <>\n      <div className={styles.disclaimerText}>\n        <div>\n          <p>{DisclaimerText[lang]}</p>\n        </div>\n      </div>\n\n      <div className={styles.buttonWrapper}>\n        <Button\n          buttonText={DisclaimerButtonText[lang]}\n          buttonOnClickHandler={buttonOnClickHandler}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Disclaimer;\n","export const formNames: any = {\n  rus: 'Страна',\n  eng: 'Country',\n};\n\nexport const formTitle: any = {\n  rus: 'Пожалуйста, заполни поля',\n  eng: 'Please, fill the form',\n};\n\nexport const formSex: any = {\n  rus: 'Пол',\n  eng: 'Sex',\n};\n\nexport const formSexList: any = {\n  rus: ['Муж', 'Жен', 'Другое'],\n  eng: ['Male', 'Female', 'Other'],\n};\n\nexport const formButton: any = {\n  rus: 'Рассчитать',\n  eng: 'Calculate',\n};\n\nexport const formDate: any = {\n  rus: 'Дата рождения',\n  eng: 'Birth date',\n};\n","const currentSexForSearch = (currentSex: string): string => {\n  if (\n    currentSex.toLocaleLowerCase() === 'male' ||\n    currentSex.toLocaleLowerCase() === 'муж'\n  ) {\n    return 'Male';\n  } else if (\n    currentSex.toLocaleLowerCase() === 'female' ||\n    currentSex.toLocaleLowerCase() === 'жен'\n  ) {\n    return 'Female';\n  }\n  return 'Both sexes';\n};\n\nexport default currentSexForSearch;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { format } from 'date-fns';\nimport clsx from 'clsx';\n\nimport {\n  formButton,\n  formDate,\n  formNames,\n  formSex,\n  formSexList,\n  formTitle,\n} from '../../constants/form';\n\nimport data from '../../data/data.json';\n\nimport {\n  choseBirthDate,\n  choseCountry,\n  choseSex,\n  openForm,\n  openResult,\n  saveResult,\n} from '../../store/MainReducer/actions';\nimport Button from '../../ui/Button';\nimport Select from '../../ui/Select';\nimport currentSexForSearch from '../../utils/currentSexForSearch';\n\nimport { IForm } from './types';\n\nimport styles from './Form.module.css';\n\nconst Form: React.FC<IForm> = ({ store }) => {\n  const dispatch = useDispatch();\n\n  const choseNewCountry = (event: any) => {\n    if (event.target.value) {\n      dispatch(choseCountry(event.target.value));\n    }\n  };\n\n  const choseNewSex = (event: any) => {\n    if (event.target.value) {\n      dispatch(choseSex(event.target.value));\n    }\n  };\n\n  const [localBirthDate, setLocalBirthDate] = useState(\n    format(store.birthDate, 'yyyy-MM-dd'),\n  );\n\n  const choseNewBirthDate = (event: any) => {\n    if (event.target.valueAsDate) {\n      dispatch(choseBirthDate(event.target.valueAsDate));\n    }\n    if (event.target.valueAsDate)\n      setLocalBirthDate(() => format(event.target.valueAsDate, 'yyyy-MM-dd'));\n  };\n\n  const calculateHandler = () => {\n    let currentSex = currentSexForSearch(store.chosenSex);\n\n    // range of relevant data by years\n    const releventRange = data.fact.filter(\n      (el) =>\n        el.dims.COUNTRY === store.chosenCountry &&\n        el.dims.SEX === currentSex &&\n        el.dims.GHO === 'Life expectancy at birth (years)',\n    );\n\n    // find the data for the latest year of the range\n    const totalData = releventRange.sort((a, b) =>\n      a.dims.YEAR > b.dims.YEAR ? -1 : 1,\n    )[0];\n\n    const valueYears = Number(totalData.Value);\n    const statYear = Number(totalData.dims.YEAR);\n\n    dispatch(saveResult(valueYears, statYear));\n    dispatch(openForm(false));\n    dispatch(openResult(true));\n  };\n\n  return (\n    <div className={styles.formComponent}>\n      <h2 className={styles.subTitle}>{formTitle[store.currentLang]}</h2>\n\n      <form className={styles.formWrapper}>\n        <div className={styles.formRow}>\n          <Select\n            onChange={choseNewCountry}\n            list={store.countriesList}\n            currentValue={store.chosenCountry}\n            title={formNames[store.currentLang]}\n          />\n        </div>\n\n        <div className={styles.formRow}>\n          <Select\n            onChange={choseNewSex}\n            list={formSexList[store.currentLang]}\n            currentValue={store.chosenSex}\n            title={formSex[store.currentLang]}\n          />\n        </div>\n\n        <div className={clsx(styles.formRow, styles.dateWrapper)}>\n          <label>{formDate[store.currentLang]}</label>\n          <input\n            type=\"date\"\n            onChange={choseNewBirthDate}\n            value={localBirthDate}\n          />\n        </div>\n      </form>\n\n      <Button\n        buttonText={formButton[store.currentLang]}\n        buttonOnClickHandler={calculateHandler}\n      />\n    </div>\n  );\n};\n\nexport default Form;\n","export const resultButton: any = {\n  rus: 'Назад',\n  eng: 'Back',\n};\n\nexport const resultIn: any = {\n  rus: 'В',\n  eng: 'In',\n};\n\nexport const resultText1: any = {\n  rus: 'средняя продолжительность жизни',\n  eng: 'the average life expectancy',\n};\n\nexport const resultTextMan: any = {\n  rus: 'у мужчин',\n  eng: 'for men',\n};\n\nexport const resultTextWoman: any = {\n  rus: 'у женщин',\n  eng: 'for women',\n};\n\nexport const resultTextIs: any = {\n  rus: 'составляет',\n  eng: 'is',\n};\n\nexport const resultTextYears: any = {\n  rus: 'лет (года)',\n  eng: 'years',\n};\n\nexport const resultTextData: any = {\n  rus: 'Это данные',\n  eng: 'This is',\n};\n\nexport const resultTextYearRus: any = {\n  rus: 'год',\n  eng: '',\n};\n\nexport const resultTextWho: any = {\n  rus: 'ВОЗ',\n  eng: 'the WHO data',\n};\n\nexport const resultTextFor: any = {\n  rus: 'за',\n  eng: 'for',\n};\n\nexport const resultTextLivedMan: any = {\n  rus: 'Ты прожил',\n  eng: \"You've lived for\",\n};\n\nexport const resultTextLivedWoman: any = {\n  rus: 'Ты прожила',\n  eng: 'You have lived for',\n};\n\nexport const resultTextCons: any = {\n  rus: 'что составляет',\n  eng: 'which is',\n};\n\nexport const resultTextAfterPers: any = {\n  rus: 'от среднего срока жизни указанной тобой страны',\n  eng: 'of the average life of the country you specified',\n};\n\nexport const resultTextLucky: any = {\n  rus: 'Похоже, тебе очень повезло.',\n  eng: \"It seems you're lucky.\",\n};\n\nexport const resultYearsTextinTheTable: any = {\n  rus: 'Тебе осталось прожить еще примерно',\n  eng: 'You have about',\n};\n\nexport const resultTextYears2: any = {\n  rus: 'лет (года), или...',\n  eng: 'more years to live, or...',\n};\n\nexport const resultYearsTextInTheTableLuckyMan: any = {\n  rus: 'Ты - счастливчик! Ты прожил больше среднего на',\n  eng: 'You are lucky! You lived more than average by',\n};\n\nexport const resultYearsTextInTheTableLuckyWooman: any = {\n  rus: 'А ты счастливая! Ты прожила больше среднего на',\n  eng: 'You are lucky! You lived more than average by',\n};\n\nexport const resultTextOr: any = {\n  rus: '... или',\n  eng: '... or',\n};\n\nexport const resultTextWeek: any = {\n  rus: 'недель.',\n  eng: 'weeks.',\n};\n\nexport const resultTextFinal: any = {\n  rus: 'Цени свою жизнь!',\n  eng: 'Appreciate your life!',\n};\n\nexport const resultTextFinalLucky: any = {\n  rus: 'Не останавливайся на достигнутом!',\n  eng: \"Don't stop there!\",\n};\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport { IWeeksTable } from './types';\n\nimport styles from './WeeksTable.module.css';\n\nconst WeeksTable: React.FC<IWeeksTable> = ({ valueYears, userYears }) => {\n  const roundUserYears = Math.ceil(userYears);\n\n  const tableCols = [];\n  for (let i = 0; i < 52; i++) {\n    tableCols.push(\n      <td className={styles.tableCell} height={3} key={i + 1000} />,\n    );\n  }\n\n  const restWeeks = Math.floor((1 - (roundUserYears - userYears)) * 52);\n  const tableColsRest: any[] = [];\n  for (let i = 1; i <= 52; i++) {\n    tableColsRest.push(\n      <td\n        className={clsx(\n          styles.tableCell,\n          restWeeks > i && styles.tableFullCellRest,\n        )}\n        height={3}\n        key={i + 1000}\n      />,\n    );\n  }\n\n  const tableInners = (rowsNum: number, tableCols: any[]) => {\n    const arrToRender = [];\n    const tableRows = valueYears > userYears ? rowsNum : userYears;\n\n    for (let i = 1; i <= tableRows; i++) {\n      arrToRender.push(\n        <tr\n          key={i + 1}\n          className={clsx(\n            styles.row,\n            userYears > i && styles.tableFullCell,\n            i > rowsNum && styles.tableExtraCell,\n          )}\n        >\n          {i === roundUserYears ? tableColsRest : tableCols}\n        </tr>,\n      );\n    }\n    return arrToRender;\n  };\n\n  return (\n    <div className={styles.weeksTableWrapper}>\n      <table>\n        <tbody>{tableInners(valueYears, tableCols)}</tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default WeeksTable;\n","/**\n * Принимает число и выбранный язык\n * Возвращает строку, включающую число, округленное до десятых, и \"год/лет\" в правильном склонении, либо англ версию\n *\n * @param {number} numInn\n * @param {string} lang\n * @return {*}  {string}\n */\nconst inflection = (numInn: number, lang: string): string => {\n  const num = Math.floor(numInn);\n\n  if (lang === 'rus') {\n    if (num !== 11 && num !== 111 && (num === 1 || num % 10 === 1)) {\n      return `${numInn.toFixed(1)} год`;\n    } else if (\n      (num > 1 && num < 5) ||\n      (num > 21 && (num % 10 === 2 || num % 10 === 3 || num % 10 === 4))\n    ) {\n      return `${numInn.toFixed(1)} года`;\n    } else {\n      return `${numInn.toFixed(1)} лет`;\n    }\n  } else {\n    return `${num} years`;\n  }\n};\n\nexport default inflection;\n","import React from 'react';\nimport { formSexList } from '../../../../constants/form';\n\nimport {\n  resultIn,\n  resultText1,\n  resultTextAfterPers,\n  resultTextCons,\n  resultTextData,\n  resultTextFor,\n  resultTextIs,\n  resultTextLivedMan,\n  resultTextLivedWoman,\n  resultTextLucky,\n  resultTextMan,\n  resultTextWho,\n  resultTextWoman,\n  resultTextYearRus,\n} from '../../../../constants/result';\n\nimport { IResultText } from './types';\n\nimport styles from './ResultText.module.css';\nimport inflection from '../../../../utils/inflection';\n\nconst ResultText: React.FC<IResultText> = ({ store }) => {\n  return (\n    <h2>\n      {resultIn[store.currentLang]} {store.chosenCountry}{' '}\n      {resultText1[store.currentLang]}{' '}\n      {store.chosenSex === formSexList.rus[0] ||\n      store.chosenSex === formSexList.eng[0]\n        ? resultTextMan[store.currentLang]\n        : ''}\n      {store.chosenSex === formSexList.rus[1] ||\n      store.chosenSex === formSexList.eng[1]\n        ? resultTextWoman[store.currentLang]\n        : ''}\n      {store.chosenSex === formSexList.eng[2] ||\n      store.chosenSex === formSexList.rus[2]\n        ? ''\n        : ''}{' '}\n      {resultTextIs[store.currentLang]}{' '}\n      <span className={styles.color}>\n        {inflection(store.valueYears, store.currentLang)}\n      </span>\n      .\n      <br />\n      {resultTextData[store.currentLang]} {resultTextWho[store.currentLang]}{' '}\n      {resultTextFor[store.currentLang]} {store.statYear}{' '}\n      {resultTextYearRus[store.currentLang]}.\n      <br />\n      {store.userYears > store.valueYears &&\n        resultTextLucky[store.currentLang]}{' '}\n      {store.chosenSex === formSexList.rus[0] ||\n      store.chosenSex === formSexList.eng[0] ||\n      store.chosenSex === formSexList.eng[2] ||\n      store.chosenSex === formSexList.rus[2]\n        ? resultTextLivedMan[store.currentLang]\n        : ''}{' '}\n      {store.chosenSex === formSexList.rus[1] ||\n      store.chosenSex === formSexList.eng[1]\n        ? resultTextLivedWoman[store.currentLang]\n        : ''}{' '}\n      <span className={styles.color}>\n        {inflection(store.userYears, store.currentLang)}\n      </span>\n      , {resultTextCons[store.currentLang]}{' '}\n      <span className={styles.color}>\n        {((store.userYears / store.valueYears) * 100).toFixed(1)}%\n      </span>{' '}\n      {resultTextAfterPers[store.currentLang]}.\n    </h2>\n  );\n};\n\nexport default ResultText;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  resultButton,\n  resultTextFinal,\n  resultTextFinalLucky,\n  resultTextOr,\n  resultTextWeek,\n  resultTextYears,\n  resultTextYears2,\n  resultYearsTextinTheTable,\n  resultYearsTextInTheTableLuckyMan,\n  resultYearsTextInTheTableLuckyWooman,\n} from '../../constants/result';\n\nimport { openForm, openResult } from '../../store/MainReducer/actions';\n\nimport Button from '../../ui/Button';\nimport WeeksTable from '../WeeksTable';\n\nimport { IResult, StateItemType, StateType } from './types';\n\nimport styles from './Result.module.css';\nimport ResultText from './assets/ResultText';\nimport { formSexList } from '../../constants/form';\nimport clsx from 'clsx';\n\nconst Result: React.FC<IResult> = ({ store }) => {\n  const dispatch = useDispatch();\n\n  const height =\n    store.userYears < store.valueYears\n      ? `${store.valueYears * 7 - 1}px`\n      : `${store.userYears * 7 - 1}px`;\n\n  const states: StateType = ['table', 'years', 'weeks', 'final'];\n  const [show, setShow] = useState<StateItemType>(states[0]);\n\n  const backHandler = () => {\n    dispatch(openResult(false));\n    dispatch(openForm(true));\n  };\n\n  const changeResultInfo = () => {\n    if (show === states[states.length - 1]) {\n      setShow(states[0]);\n    } else {\n      const curIndex = states.indexOf(show);\n      setShow(states[curIndex + 1]);\n    }\n  };\n\n  return (\n    <div className={styles.resultWrapper}>\n      <ResultText store={store} />\n      <div\n        className={clsx(\n          styles.tableWrapper,\n          show === 'table' && styles.tableWrapperAnime,\n        )}\n        onClick={changeResultInfo}\n      >\n        {show === 'table' && (\n          <WeeksTable\n            valueYears={store.valueYears}\n            userYears={store.userYears}\n          />\n        )}\n\n        {show === 'years' && (\n          <div className={styles.showInfoWrapper} style={{ height: height }}>\n            {store.userYears < store.valueYears ? (\n              <h2>\n                {resultYearsTextinTheTable[store.currentLang]}\n                <span>{(store.valueYears - store.userYears).toFixed(1)}</span>\n                {resultTextYears2[store.currentLang]}\n              </h2>\n            ) : (\n              <h2>\n                {store.chosenSex === formSexList.rus[0] ||\n                store.chosenSex === formSexList.eng[0] ||\n                store.chosenSex === formSexList.eng[2] ||\n                store.chosenSex === formSexList.rus[2]\n                  ? resultYearsTextInTheTableLuckyMan[store.currentLang]\n                  : resultYearsTextInTheTableLuckyWooman[store.currentLang]}\n                <span>{(store.userYears - store.valueYears).toFixed(1)}</span>\n                {resultTextYears[store.currentLang]}\n              </h2>\n            )}\n          </div>\n        )}\n\n        {show === 'weeks' && (\n          <div className={styles.showInfoWrapper} style={{ height: height }}>\n            {store.userYears < store.valueYears ? (\n              <h2>\n                {resultTextOr[store.currentLang]}\n                <span>\n                  {((store.valueYears - store.userYears) * 52).toFixed()}\n                </span>\n                {resultTextWeek[store.currentLang]}\n              </h2>\n            ) : (\n              <h2>\n                {resultTextOr[store.currentLang]}\n                <span>\n                  {((store.userYears - store.valueYears) * 52).toFixed()}\n                </span>\n                {resultTextWeek[store.currentLang]}\n              </h2>\n            )}\n          </div>\n        )}\n\n        {show === 'final' && (\n          <div className={styles.showInfoWrapper} style={{ height: height }}>\n            {store.userYears < store.valueYears ? (\n              <h2>{resultTextFinal[store.currentLang]}</h2>\n            ) : (\n              <h2>{resultTextFinalLucky[store.currentLang]}</h2>\n            )}\n          </div>\n        )}\n      </div>\n\n      <Button\n        buttonText={resultButton[store.currentLang]}\n        buttonOnClickHandler={backHandler}\n      />\n    </div>\n  );\n};\n\nexport default Result;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { appLang } from '../../constants/app';\n\nimport { choseLang } from '../../store/MainReducer/actions';\n\nimport { AppStateType } from '../../store/RootReducer';\nimport { InitialMainReducerType } from '../../store/MainReducer/types';\n\nimport Select from '../../ui/Select';\n\nimport Disclaimer from '../Disclaimer';\nimport Form from '../Form';\nimport Result from '../Result';\n\nimport styles from './App.module.css';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const storeState = useSelector<AppStateType, InitialMainReducerType>(\n    (store) => store.main,\n  );\n\n  const changeLang = (event: any) => {\n    if (event.target.value) {\n      dispatch(choseLang(event.target.value));\n    }\n  };\n\n  return (\n    <div className={styles.appWrapper}>\n      <header className={styles.header}>\n        <Select\n          onChange={changeLang}\n          list={Object.values(appLang)}\n          currentValue={\n            storeState.currentLang === 'eng'\n              ? Object.values(appLang)[1]\n              : Object.values(appLang)[0]\n          }\n        />\n      </header>\n\n      {!storeState.formFlag && !storeState.resultFlag && (\n        <Disclaimer lang={storeState.currentLang} />\n      )}\n\n      {storeState.formFlag && !storeState.resultFlag && (\n        <Form store={storeState} />\n      )}\n\n      {!storeState.formFlag && storeState.resultFlag && (\n        <Result store={storeState} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import * as CONST from './constants';\nimport { formSexList } from '../../constants/form';\nimport { appLang } from '../../constants/app';\n\nimport data from '../../data/data.json';\n\nimport { InitialMainReducerType } from './types';\n\nimport { ActionsType } from './actions';\n\nconst dataCountriesList = Array.from(\n  new Set(data.fact.map((el) => el.dims.COUNTRY)),\n);\n\nconst InitialState: InitialMainReducerType = {\n  formFlag: false,\n  resultFlag: false,\n  countriesList: dataCountriesList,\n  chosenCountry: dataCountriesList[0],\n  chosenSex: formSexList.rus[0],\n  valueYears: 0,\n  statYear: 0,\n  currentDate: new Date(),\n  birthDate: new Date(),\n  userYears: 0,\n  currentLang: Object.keys(appLang)[0],\n};\n\nexport const MainReducer = (\n  state = InitialState,\n  action: ActionsType,\n): typeof state => {\n  switch (action.type) {\n    case CONST.OPEN_FORM:\n      return { ...state, formFlag: action.formFlag };\n\n    case CONST.OPEN_RESULT:\n      return { ...state, resultFlag: action.resultFlag };\n\n    case CONST.CHOSE_COUNTRY:\n      return { ...state, chosenCountry: action.chosenCountry };\n\n    case CONST.CHOSE_SEX:\n      return { ...state, chosenSex: action.chosenSex };\n\n    case CONST.SAVE_RESULT:\n      return {\n        ...state,\n        valueYears: action.valueYears,\n        statYear: action.statYear,\n      };\n\n    case CONST.CHOSE_BIRTH_DATE:\n      const end = state.currentDate.getTime();\n      const start = action.birthDate.getTime();\n      const userYears = (end - start) / 1000 / 60 / 60 / 24 / 365;\n      return { ...state, birthDate: action.birthDate, userYears: userYears };\n\n    case CONST.CHOSE_LANG:\n      return {\n        ...state,\n        currentLang:\n          action.chosenLang === 'Eng'\n            ? Object.keys(appLang)[1]\n            : Object.keys(appLang)[0],\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { MainReducer } from './MainReducer/MainReducer';\n\nexport const RootReducer = combineReducers({\n  main: MainReducer,\n});\n\nexport type AppStateType = ReturnType<typeof RootReducer>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { compose, createStore } from 'redux';\n\nimport App from './components/App';\nimport { RootReducer } from './store/RootReducer';\n\nimport './index.css';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(RootReducer, composeEnhancers());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}