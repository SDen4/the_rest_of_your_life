{"version":3,"sources":["components/Form/Form.module.css","components/WeeksTable/WeeksTable.module.css","components/Result/Result.module.css","components/Result/assets/ResultText/ResultText.module.css","ui/Select/Select.module.css","components/Disclaimer/Disclaimer.module.css","ui/Loader/Loader.module.css","components/App/App.module.css","ui/Button/Button.module.css","constants/app.ts","constants/form.ts","store/Search/ducks/duck.ts","store/Search/selectors/selectors.ts","ui/Select/Select.tsx","ui/Button/Button.tsx","constants/disclaimer.ts","components/Disclaimer/Disclaimer.tsx","components/Form/Form.tsx","constants/result.ts","utils/inflection.ts","components/WeeksTable/WeeksTable.tsx","components/Result/assets/ResultText/ResultText.tsx","components/Result/Result.tsx","ui/Loader/Loader.tsx","components/App/App.tsx","store/RootReducer.ts","utils/api.ts","utils/currentSexForSearch.ts","store/Search/sagas/saga.ts","store/RootSaga.ts","index.tsx"],"names":["module","exports","appLang","rus","eng","formNames","formTitle","formSex","formSexList","formButton","formDate","dataCountriesList","Array","from","Set","data","fact","map","el","dims","COUNTRY","main","searchRequestSaga","createAction","birthDateSaga","searchAdd","choseCountry","choseSex","choseLang","saveResult","saveBirthDate","loading","form","result","searchItem","createReducer","toString","_state","action","payload","choseCountryItem","chosenSex","chosenLang","Object","keys","savedResult","valueYears","statYear","savedBirthDate","birthDate","Date","userYears","savedInitData","currentDate","countriesList","loadingFlag","formFlag","resultFlag","mainRootReducer","combineReducers","selectSearchItem","createSelector","store","selectChosenSex","selectChosenLang","selectLoadingFlag","selectFormFlag","selectResultFlag","selectValueYears","selectStatYear","selectBirthDate","selectUserYears","selectCurrentDate","selectCountriesList","selectCountry","Select","title","onChange","list","currentValue","className","styles","label","value","select","Button","buttonText","buttonOnClickHandler","type","onClick","button","DisclaimerText","DisclaimerButtonText","Disclaimer","lang","dispatch","useDispatch","disclaimerText","buttonWrapper","Form","sex","useSelector","country","useState","format","localBirthDate","setLocalBirthDate","formComponent","subTitle","formWrapper","formRow","event","target","clsx","dateWrapper","valueAsDate","resultButton","resultText1","resultTextMan","resultTextWoman","resultTextIs","resultTextData","resultTextYearRus","resultTextWho","resultTextFor","resultTextLivedMan","resultTextLivedWoman","resultTextCons","resultTextAfterPers","resultTextLucky","resultYearsTextinTheTable","resultYearsTextInTheTableLuckyMan","resultYearsTextInTheTableLuckyWooman","resultTextOr","resultTextOr2","resultTextWeek","resultTextFinal","resultTextFinalLucky","inflection","numInn","num","Math","floor","toFixed","WeeksTable","roundUserYears","ceil","tableCols","i","push","tableCell","height","restWeeks","tableColsRest","tableFullCellRest","weeksTableWrapper","rowsNum","arrToRender","tableRows","row","tableFullCell","tableExtraCell","tableInners","ResultText","statYears","color","Result","states","show","setShow","resultWrapper","tableWrapper","tableWrapperAnime","length","curIndex","indexOf","showInfoWrapper","style","Loader","classes","loaderWrapper","ldsDualRing","App","appWrapper","header","values","RootReducer","API","axios","create","baseURL","currentSexForSearch","currentSex","toLocaleLowerCase","getSearchItem","getBirthDate","rootSearchSaga","getData","countryName","a","params","URLSearchParams","append","config","headers","post","then","res","response","finalCountry","put","translatedItem","status","translatedText","relevantRange","filter","SEX","GHO","totalData","sort","b","YEAR","Number","Value","all","end","start","getTime","takeEvery","rootSaga","fork","saga","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","RootSaga","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8015746.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formComponent\":\"Form_formComponent__f3zp3\",\"formWrapper\":\"Form_formWrapper__1ZjUZ\",\"formRow\":\"Form_formRow__tzTQf\",\"subTitle\":\"Form_subTitle__3xQx5\",\"dateWrapper\":\"Form_dateWrapper__3Esei\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableCell\":\"WeeksTable_tableCell__30vVm\",\"tableFullCell\":\"WeeksTable_tableFullCell__1KuKw\",\"tableFullCellRest\":\"WeeksTable_tableFullCellRest__2Np6n\",\"tableExtraCell\":\"WeeksTable_tableExtraCell__26vsx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableWrapper\":\"Result_tableWrapper__2lkuz\",\"tableWrapperAnime\":\"Result_tableWrapperAnime__2ubzh\",\"anime\":\"Result_anime__2LmMv\",\"resultWrapper\":\"Result_resultWrapper__HbqTI\",\"showInfoWrapper\":\"Result_showInfoWrapper__2Pkkb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color\":\"ResultText_color__33ocw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__3PL6i\",\"label\":\"Select_label__2UJcy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"disclaimerText\":\"Disclaimer_disclaimerText__1qxLh\",\"buttonWrapper\":\"Disclaimer_buttonWrapper__1ywmN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderWrapper\":\"Loader_loaderWrapper__7w3wI\",\"ldsDualRing\":\"Loader_ldsDualRing__3TscM\",\"lds-dual-ring\":\"Loader_lds-dual-ring__lyjMd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__1FF17\",\"header\":\"App_header__2MS2l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1Y5Fm\"};","export type constType = { [key: string]: string };\n\nexport const appLang: constType = { rus: 'Рус', eng: 'Eng' };\n","export type constType = { [key: string]: string };\nexport type constArrType = { [key: string]: string[] };\n\nexport const formNames: constType = {\n  rus: 'Страна',\n  eng: 'Country'\n};\n\nexport const formTitle: constType = {\n  rus: 'Пожалуйста, заполни поля',\n  eng: 'Please, fill the form'\n};\n\nexport const formSex: constType = {\n  rus: 'Пол',\n  eng: 'Sex'\n};\n\nexport const formSexList: constArrType = {\n  rus: ['Муж', 'Жен', 'Другое'],\n  eng: ['Male', 'Female', 'Other']\n};\n\nexport const formButton: constType = {\n  rus: 'Рассчитать',\n  eng: 'Calculate'\n};\n\nexport const formDate: constType = {\n  rus: 'Дата рождения',\n  eng: 'Birth date'\n};\n","import { combineReducers } from 'redux';\nimport { createAction, createReducer } from '@reduxjs/toolkit';\n\nimport { formSexList } from '../../../constants/form';\nimport { appLang } from '../../../constants/app';\n\nimport { saveBirthDateType, saveResultType } from '../types/typesSearch';\n\nimport data from '../../../data/data.json';\n\nconst dataCountriesList = Array.from(\n  new Set(data.fact.map((el) => el.dims.COUNTRY))\n);\n\nconst main = 'main';\n\n// Actions ==========================\nexport const searchRequestSaga = createAction(`${main}/SEARCH_REQUEST`);\nexport const birthDateSaga = createAction<Date>(`${main}/BIRTH_DATE`);\n\nexport const searchAdd = createAction<string>(`${main}/SEARCH_ADD`);\nexport const choseCountry = createAction<string>(`${main}/CHOSE_COUNTRY`);\nexport const choseSex = createAction<string>(`${main}/CHOSE_SEX`);\nexport const choseLang = createAction<string>(`${main}/CHOSE_LANG`);\nexport const saveResult = createAction<saveResultType>(`${main}/SAVE_RESULT`);\nexport const saveBirthDate = createAction<saveBirthDateType>(\n  `${main}/SAVE_BIRTH`\n);\n\nexport const loading = createAction<boolean>(`${main}/LOADING`);\nexport const form = createAction<boolean>(`${main}/FORM_FLAG`);\nexport const result = createAction<boolean>(`${main}/RESULT_FLAG`);\n\n// Reducers ==========================\nconst searchItem = createReducer('', {\n  [searchAdd.toString()]: (_state, action) => action.payload\n});\n\nconst choseCountryItem = createReducer(dataCountriesList[0], {\n  [choseCountry.toString()]: (_state, action) => action.payload\n});\n\nconst chosenSex = createReducer(formSexList.rus[0], {\n  [choseSex.toString()]: (_state, action) => action.payload\n});\n\nconst chosenLang = createReducer(Object.keys(appLang)[0], {\n  [choseLang.toString()]: (_state, action) => action.payload\n});\n\nconst savedResult = createReducer(\n  {\n    valueYears: 0,\n    statYear: 0\n  },\n  {\n    [saveResult.toString()]: (_state, action) => action.payload\n  }\n);\n\nconst savedBirthDate = createReducer(\n  {\n    birthDate: new Date(),\n    userYears: 0\n  },\n  {\n    [saveBirthDate.toString()]: (_state, action) => action.payload\n  }\n);\n\nconst savedInitData = createReducer(\n  {\n    currentDate: new Date(),\n    countriesList: dataCountriesList\n  },\n  {}\n);\n\nconst loadingFlag = createReducer(false, {\n  [result.toString()]: () => false,\n  [loading.toString()]: (_state, action) => action.payload\n});\n\nconst formFlag = createReducer(false, {\n  [form.toString()]: (_state, action) => action.payload\n});\n\nconst resultFlag = createReducer(false, {\n  [result.toString()]: (_state, action) => action.payload,\n  [loading.toString()]: () => false\n});\n\n// Root Reducer\nconst mainRootReducer = combineReducers({\n  searchItem,\n  chosenSex,\n  choseCountryItem,\n  chosenLang,\n  savedResult,\n  savedBirthDate,\n  savedInitData,\n  loadingFlag,\n  formFlag,\n  resultFlag\n});\n\nexport default mainRootReducer;\n","import { createSelector } from '@reduxjs/toolkit';\n\nimport { AppStateType } from '../../../store/RootReducer';\n\nexport const selectSearchItem = createSelector(\n  (store: AppStateType) => store.main.searchItem,\n  (searchItem) => searchItem\n);\n\nexport const selectChosenSex = createSelector(\n  (store: AppStateType) => store.main.chosenSex,\n  (chosenSex) => chosenSex\n);\n\nexport const selectChosenLang = createSelector(\n  (store: AppStateType) => store.main.chosenLang,\n  (chosenLang) => chosenLang\n);\n\nexport const selectLoadingFlag = createSelector(\n  (store: AppStateType) => store.main.loadingFlag,\n  (loadingFlag) => loadingFlag\n);\n\nexport const selectFormFlag = createSelector(\n  (store: AppStateType) => store.main.formFlag,\n  (formFlag) => formFlag\n);\n\nexport const selectResultFlag = createSelector(\n  (store: AppStateType) => store.main.resultFlag,\n  (resultFlag) => resultFlag\n);\n\nexport const selectValueYears = createSelector(\n  (store: AppStateType) => store.main.savedResult.valueYears,\n  (valueYears) => valueYears\n);\n\nexport const selectStatYear = createSelector(\n  (store: AppStateType) => store.main.savedResult.statYear,\n  (chosenLang) => chosenLang\n);\n\nexport const selectBirthDate = createSelector(\n  (store: AppStateType) => store.main.savedBirthDate.birthDate,\n  (birthDate) => birthDate\n);\n\nexport const selectUserYears = createSelector(\n  (store: AppStateType) => store.main.savedBirthDate.userYears,\n  (userYears) => userYears\n);\n\nexport const selectCurrentDate = createSelector(\n  (store: AppStateType) => store.main.savedInitData.currentDate,\n  (currentDate) => currentDate\n);\n\nexport const selectCountriesList = createSelector(\n  (store: AppStateType) => store.main.savedInitData.countriesList,\n  (countriesList) => countriesList\n);\n\nexport const selectCountry = createSelector(\n  (store: AppStateType) => store.main.choseCountryItem,\n  (choseCountryItem) => choseCountryItem\n);\n","import React from 'react';\n\nimport { ISelect } from './types';\n\nimport styles from './Select.module.css';\n\nconst Select: React.FC<ISelect> = ({ title, onChange, list, currentValue }) => {\n  return (\n    <>\n      {title && <label className={styles.label}>{title}</label>}\n      <select\n        onChange={onChange}\n        value={currentValue}\n        className={styles.select}\n      >\n        {list.map((el) => (\n          <option value={el} key={el}>\n            {el}\n          </option>\n        ))}\n      </select>\n    </>\n  );\n};\n\nexport default Select;\n","import React from 'react';\n\nimport { IButton } from './types';\n\nimport styles from './Button.module.css';\n\nconst Button: React.FC<IButton> = ({ buttonText, buttonOnClickHandler }) => {\n  return (\n    <button\n      type=\"button\"\n      onClick={buttonOnClickHandler}\n      className={styles.button}\n    >\n      {buttonText}\n    </button>\n  );\n};\n\nexport default Button;\n","export type constType = { [key: string]: string };\n\nexport const DisclaimerText: constType = {\n  rus: 'Посмотри, сколько тебе еще осталось',\n  eng: 'Look at the rest of your life'\n};\n\nexport const DisclaimerButtonText: constType = {\n  rus: 'Далее',\n  eng: 'Next'\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Button from '../../ui/Button';\n\nimport { DisclaimerText } from '../../constants/disclaimer';\nimport { DisclaimerButtonText } from '../../constants/disclaimer';\n\nimport { IDisclaimer } from './types';\n\nimport styles from './Disclaimer.module.css';\nimport { form } from '../../store/Search/ducks';\n\nconst Disclaimer: React.FC<IDisclaimer> = ({ lang }) => {\n  const dispatch = useDispatch();\n\n  const buttonOnClickHandler = () => {\n    dispatch(form(true));\n  };\n\n  return (\n    <>\n      <div className={styles.disclaimerText}>\n        <div>\n          <p>{DisclaimerText[lang]}</p>\n        </div>\n      </div>\n\n      <div className={styles.buttonWrapper}>\n        <Button\n          buttonText={DisclaimerButtonText[lang]}\n          buttonOnClickHandler={buttonOnClickHandler}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Disclaimer;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { format } from 'date-fns';\nimport clsx from 'clsx';\n\nimport {\n  formButton,\n  formDate,\n  formNames,\n  formSex,\n  formSexList,\n  formTitle\n} from '../../constants/form';\n\nimport Button from '../../ui/Button';\nimport Select from '../../ui/Select';\n\nimport {\n  selectChosenSex,\n  selectChosenLang,\n  selectCountriesList,\n  selectBirthDate,\n  selectCountry\n} from '../../store/Search/selectors/selectors';\n\nimport {\n  choseSex,\n  birthDateSaga,\n  choseCountry,\n  searchRequestSaga\n} from '../../store/Search/ducks';\n\nimport styles from './Form.module.css';\n\nconst Form: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const sex: string = useSelector(selectChosenSex);\n  const lang: string = useSelector(selectChosenLang);\n  const countriesList: string[] = useSelector(selectCountriesList);\n  const birthDate: Date = useSelector(selectBirthDate);\n\n  const country = useSelector(selectCountry);\n\n  const choseNewCountry = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (event.target.value) {\n      dispatch(choseCountry(event.target.value));\n    }\n  };\n\n  const choseNewSex = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (event.target.value) {\n      dispatch(choseSex(event.target.value));\n    }\n  };\n\n  const [localBirthDate, setLocalBirthDate] = useState(\n    format(birthDate, 'yyyy-MM-dd')\n  );\n\n  const choseNewBirthDate = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.valueAsDate) {\n      dispatch(birthDateSaga(event.target.valueAsDate));\n      setLocalBirthDate(() =>\n        format(event.target.valueAsDate as Date, 'yyyy-MM-dd')\n      );\n    }\n  };\n\n  const calculateHandler = () => {\n    dispatch(searchRequestSaga());\n  };\n\n  return (\n    <div className={styles.formComponent}>\n      <h2 className={styles.subTitle}>{formTitle[lang]}</h2>\n\n      <form className={styles.formWrapper}>\n        <div className={styles.formRow}>\n          <Select\n            onChange={choseNewCountry}\n            list={countriesList}\n            currentValue={country}\n            title={formNames[lang]}\n          />\n        </div>\n\n        <div className={styles.formRow}>\n          <Select\n            onChange={choseNewSex}\n            list={formSexList[lang]}\n            currentValue={sex}\n            title={formSex[lang]}\n          />\n        </div>\n\n        <div className={clsx(styles.formRow, styles.dateWrapper)}>\n          <label>{formDate[lang]}</label>\n          <input\n            type=\"date\"\n            onChange={choseNewBirthDate}\n            value={localBirthDate}\n          />\n        </div>\n      </form>\n\n      <Button\n        buttonText={formButton[lang]}\n        buttonOnClickHandler={calculateHandler}\n      />\n    </div>\n  );\n};\n\nexport default Form;\n","export type constType = { [key: string]: string };\n\nexport const resultButton: constType = {\n  rus: 'Назад',\n  eng: 'Back'\n};\n\nexport const resultText1: constType = {\n  rus: 'средняя продолжительность жизни',\n  eng: 'the average life expectancy'\n};\n\nexport const resultTextMan: constType = {\n  rus: 'у мужчин',\n  eng: 'for men'\n};\n\nexport const resultTextWoman: constType = {\n  rus: 'у женщин',\n  eng: 'for women'\n};\n\nexport const resultTextIs: constType = {\n  rus: 'составляет',\n  eng: 'is'\n};\n\nexport const resultTextData: constType = {\n  rus: 'Это данные',\n  eng: 'This is'\n};\n\nexport const resultTextYearRus: constType = {\n  rus: 'год',\n  eng: ''\n};\n\nexport const resultTextWho: constType = {\n  rus: 'ВОЗ',\n  eng: 'the WHO data'\n};\n\nexport const resultTextFor: constType = {\n  rus: 'за',\n  eng: 'for'\n};\n\nexport const resultTextLivedMan: constType = {\n  rus: 'Ты прожил',\n  eng: \"You've lived for\"\n};\n\nexport const resultTextLivedWoman: constType = {\n  rus: 'Ты прожила',\n  eng: 'You have lived for'\n};\n\nexport const resultTextCons: constType = {\n  rus: 'что составляет',\n  eng: 'which is'\n};\n\nexport const resultTextAfterPers: constType = {\n  rus: 'от среднего срока жизни указанной тобой страны',\n  eng: 'of the average life of the country you specified'\n};\n\nexport const resultTextLucky: constType = {\n  rus: 'Похоже, тебе очень повезло.',\n  eng: \"It seems you're lucky.\"\n};\n\nexport const resultYearsTextinTheTable: constType = {\n  rus: 'Тебе осталось прожить еще примерно',\n  eng: 'You have about'\n};\n\nexport const resultYearsTextInTheTableLuckyMan: constType = {\n  rus: 'Ты - счастливчик! Ты прожил больше среднего на',\n  eng: 'You are lucky! You lived more than average by'\n};\n\nexport const resultYearsTextInTheTableLuckyWooman: constType = {\n  rus: 'А ты счастливая! Ты прожила больше среднего на',\n  eng: 'You are lucky! You lived more than average by'\n};\n\nexport const resultTextOr: constType = {\n  rus: '... или',\n  eng: '... or'\n};\n\nexport const resultTextOr2: constType = {\n  rus: ', или...',\n  eng: ', or...'\n};\n\nexport const resultTextWeek: constType = {\n  rus: 'недель.',\n  eng: 'weeks.'\n};\n\nexport const resultTextFinal: constType = {\n  rus: 'Цени свою жизнь!',\n  eng: 'Appreciate your life!'\n};\n\nexport const resultTextFinalLucky: constType = {\n  rus: 'Не останавливайся на достигнутом!',\n  eng: \"Don't stop there!\"\n};\n","/**\n * Принимает число и выбранный язык\n * Возвращает строку, включающую число, округленное до десятых, и \"год/лет\" в правильном склонении, либо англ версию\n *\n * @param {number} numInn\n * @param {string} lang\n * @return {*}  {string}\n */\nconst inflection = (numInn: number, lang: string): string => {\n  const num = Math.floor(numInn);\n\n  if (lang === 'rus') {\n    if (num !== 11 && num !== 111 && (num === 1 || num % 10 === 1)) {\n      return `${numInn.toFixed(1)} год`;\n    } else if (\n      (num > 1 && num < 5) ||\n      (num > 21 && (num % 10 === 2 || num % 10 === 3 || num % 10 === 4))\n    ) {\n      return `${numInn.toFixed(1)} года`;\n    } else {\n      return `${numInn.toFixed(1)} лет`;\n    }\n  } else {\n    return `${num} years`;\n  }\n};\n\nexport default inflection;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport { IWeeksTable } from './types';\n\nimport styles from './WeeksTable.module.css';\n\nconst WeeksTable: React.FC<IWeeksTable> = ({ valueYears, userYears }) => {\n  const roundUserYears = Math.ceil(userYears);\n\n  const tableCols = [];\n  for (let i = 0; i < 52; i++) {\n    tableCols.push(\n      <td className={styles.tableCell} height={3} key={i + 1000} />\n    );\n  }\n\n  const restWeeks = Math.floor((1 - (roundUserYears - userYears)) * 52);\n  const tableColsRest: unknown[] = [];\n  for (let i = 1; i <= 52; i++) {\n    tableColsRest.push(\n      <td\n        className={clsx(\n          styles.tableCell,\n          restWeeks > i && styles.tableFullCellRest\n        )}\n        height={3}\n        key={i + 1000}\n      />\n    );\n  }\n\n  const tableInners = (rowsNum: number, tableCols: unknown[]) => {\n    const arrToRender = [];\n    const tableRows = valueYears > userYears ? rowsNum : userYears;\n\n    for (let i = 1; i <= tableRows; i++) {\n      arrToRender.push(\n        <tr\n          key={i + 1}\n          className={clsx(\n            styles.row,\n            userYears > i && styles.tableFullCell,\n            i > rowsNum && styles.tableExtraCell\n          )}\n        >\n          {i === roundUserYears ? tableColsRest : tableCols}\n        </tr>\n      );\n    }\n    return arrToRender;\n  };\n\n  return (\n    <div className={styles.weeksTableWrapper}>\n      <table>\n        <tbody>{tableInners(valueYears, tableCols)}</tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default WeeksTable;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { formSexList } from '../../../../constants/form';\n\nimport {\n  resultText1,\n  resultTextAfterPers,\n  resultTextCons,\n  resultTextData,\n  resultTextFor,\n  resultTextIs,\n  resultTextLivedMan,\n  resultTextLivedWoman,\n  resultTextLucky,\n  resultTextMan,\n  resultTextWho,\n  resultTextWoman,\n  resultTextYearRus\n} from '../../../../constants/result';\n\nimport styles from './ResultText.module.css';\nimport inflection from '../../../../utils/inflection';\nimport {\n  selectSearchItem,\n  selectChosenSex,\n  selectChosenLang,\n  selectValueYears,\n  selectStatYear,\n  selectUserYears\n} from '../../../../store/Search/selectors/selectors';\n\nconst ResultText: React.FC = () => {\n  const country: string = useSelector(selectSearchItem);\n  const sex: string = useSelector(selectChosenSex);\n  const lang: string = useSelector(selectChosenLang);\n  const valueYears: number = useSelector(selectValueYears);\n  const statYears: number = useSelector(selectStatYear);\n  const userYears: number = useSelector(selectUserYears);\n\n  return (\n    <h2>\n      {country} {resultText1[lang]}{' '}\n      {sex === formSexList.rus[0] || sex === formSexList.eng[0]\n        ? resultTextMan[lang]\n        : ''}\n      {sex === formSexList.rus[1] || sex === formSexList.eng[1]\n        ? resultTextWoman[lang]\n        : ''}\n      {sex === formSexList.eng[2] || sex === formSexList.rus[2] ? '' : ''}{' '}\n      {resultTextIs[lang]}{' '}\n      <span className={styles.color}>{inflection(valueYears, lang)}</span>\n      .\n      <br />\n      {resultTextData[lang]} {resultTextWho[lang]} {resultTextFor[lang]}{' '}\n      {statYears} {resultTextYearRus[lang]}.\n      <br />\n      {userYears > valueYears && resultTextLucky[lang]}{' '}\n      {sex === formSexList.rus[0] ||\n      sex === formSexList.eng[0] ||\n      sex === formSexList.eng[2] ||\n      sex === formSexList.rus[2]\n        ? resultTextLivedMan[lang]\n        : ''}{' '}\n      {sex === formSexList.rus[1] || sex === formSexList.eng[1]\n        ? resultTextLivedWoman[lang]\n        : ''}{' '}\n      <span className={styles.color}>{inflection(userYears, lang)}</span>,{' '}\n      {resultTextCons[lang]}{' '}\n      <span className={styles.color}>\n        {((userYears / valueYears) * 100).toFixed(1)}%\n      </span>{' '}\n      {resultTextAfterPers[lang]}.\n    </h2>\n  );\n};\n\nexport default ResultText;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport {\n  resultButton,\n  resultTextFinal,\n  resultTextFinalLucky,\n  resultTextOr,\n  resultTextWeek,\n  resultTextOr2,\n  resultYearsTextinTheTable,\n  resultYearsTextInTheTableLuckyMan,\n  resultYearsTextInTheTableLuckyWooman\n} from '../../constants/result';\nimport { formSexList } from '../../constants/form';\n\nimport {\n  selectChosenSex,\n  selectChosenLang,\n  selectValueYears,\n  selectUserYears\n} from '../../store/Search/selectors/selectors';\n\nimport { form, result } from '../../store/Search/ducks';\n\nimport inflection from '../../utils/inflection';\n\nimport Button from '../../ui/Button';\nimport WeeksTable from '../WeeksTable';\n\nimport ResultText from './assets/ResultText';\nimport { StateItemType, StateType } from './types';\n\nimport styles from './Result.module.css';\n\nconst Result: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const sex: string = useSelector(selectChosenSex);\n  const lang: string = useSelector(selectChosenLang);\n  const valueYears: number = useSelector(selectValueYears);\n  const userYears: number = useSelector(selectUserYears);\n\n  const height =\n    userYears < valueYears\n      ? `${valueYears * 7 - 1}px`\n      : `${userYears * 7 - 1}px`;\n\n  const states: StateType = ['table', 'years', 'weeks', 'final'];\n  const [show, setShow] = useState<StateItemType>(states[0]);\n\n  const backHandler = () => {\n    dispatch(result(false));\n    dispatch(form(true));\n  };\n\n  const changeResultInfo = () => {\n    if (show === states[states.length - 1]) {\n      setShow(states[0]);\n    } else {\n      const curIndex = states.indexOf(show);\n      setShow(states[curIndex + 1]);\n    }\n  };\n\n  return (\n    <div className={styles.resultWrapper}>\n      <ResultText />\n      <div\n        className={clsx(\n          styles.tableWrapper,\n          show === 'table' && styles.tableWrapperAnime\n        )}\n        onClick={changeResultInfo}\n      >\n        {show === 'table' && (\n          <WeeksTable valueYears={valueYears} userYears={userYears} />\n        )}\n\n        {show === 'years' && (\n          <div className={styles.showInfoWrapper} style={{ height: height }}>\n            {userYears < valueYears ? (\n              <h2>\n                {resultYearsTextinTheTable[lang]}\n                <span>{inflection(valueYears - userYears, lang)}</span>\n                {resultTextOr2[lang]}\n              </h2>\n            ) : (\n              <h2>\n                {sex === formSexList.rus[0] ||\n                sex === formSexList.eng[0] ||\n                sex === formSexList.eng[2] ||\n                sex === formSexList.rus[2]\n                  ? resultYearsTextInTheTableLuckyMan[lang]\n                  : resultYearsTextInTheTableLuckyWooman[lang]}\n                <span>{inflection(userYears - valueYears, lang)}</span>\n              </h2>\n            )}\n          </div>\n        )}\n\n        {show === 'weeks' && (\n          <div className={styles.showInfoWrapper} style={{ height: height }}>\n            {userYears < valueYears ? (\n              <h2>\n                {resultTextOr[lang]}\n                <span>{((valueYears - userYears) * 52).toFixed()}</span>\n                {resultTextWeek[lang]}\n              </h2>\n            ) : (\n              <h2>\n                {resultTextOr[lang]}\n                <span>{((userYears - valueYears) * 52).toFixed()}</span>\n                {resultTextWeek[lang]}\n              </h2>\n            )}\n          </div>\n        )}\n\n        {show === 'final' && (\n          <div className={styles.showInfoWrapper} style={{ height: height }}>\n            {userYears < valueYears ? (\n              <h2>{resultTextFinal[lang]}</h2>\n            ) : (\n              <h2>{resultTextFinalLucky[lang]}</h2>\n            )}\n          </div>\n        )}\n      </div>\n\n      <Button\n        buttonText={resultButton[lang]}\n        buttonOnClickHandler={backHandler}\n      />\n    </div>\n  );\n};\n\nexport default Result;\n","import React from 'react';\n\nimport classes from './Loader.module.css';\n\nconst Loader = (): JSX.Element => {\n  return (\n    <div className={classes.loaderWrapper}>\n      <div className={classes.ldsDualRing}></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { appLang } from '../../constants/app';\n\nimport { choseLang } from '../../store/Search/ducks';\n\nimport {\n  selectLoadingFlag,\n  selectChosenLang,\n  selectFormFlag,\n  selectResultFlag\n} from '../../store/Search/selectors/selectors';\n\nimport Select from '../../ui/Select';\nimport Disclaimer from '../Disclaimer';\nimport Form from '../Form';\nimport Result from '../Result';\nimport Loader from '../../ui/Loader';\n\nimport styles from './App.module.css';\n\nfunction App(): JSX.Element {\n  const dispatch = useDispatch();\n\n  const lang: string = useSelector(selectChosenLang);\n  const loading: boolean = useSelector(selectLoadingFlag);\n  const formFlag: boolean = useSelector(selectFormFlag);\n  const resultFlag: boolean = useSelector(selectResultFlag);\n\n  const changeLang = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (event.target.value) {\n      dispatch(\n        choseLang(\n          event.target.value === 'Eng'\n            ? Object.keys(appLang)[1]\n            : Object.keys(appLang)[0]\n        )\n      );\n    }\n  };\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className={styles.appWrapper}>\n          <header className={styles.header}>\n            <Select\n              onChange={changeLang}\n              list={Object.values(appLang)}\n              currentValue={\n                lang === 'eng'\n                  ? Object.values(appLang)[1]\n                  : Object.values(appLang)[0]\n              }\n            />\n          </header>\n\n          {!formFlag && !resultFlag && <Disclaimer lang={lang} />}\n\n          {formFlag && !resultFlag && <Form />}\n\n          {!formFlag && resultFlag && <Result />}\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\n\nimport { mainRootReducer } from './Search/ducks';\n\nexport const RootReducer = combineReducers({\n  main: mainRootReducer\n});\n\nexport type AppStateType = ReturnType<typeof RootReducer>;\n","import axios from 'axios';\n\nexport const API = axios.create({\n  baseURL: 'https://text-translator2.p.rapidapi.com/'\n});\n","const currentSexForSearch = (currentSex: string): string => {\n  if (\n    currentSex.toLocaleLowerCase() === 'male' ||\n    currentSex.toLocaleLowerCase() === 'муж'\n  ) {\n    return 'Male';\n  } else if (\n    currentSex.toLocaleLowerCase() === 'female' ||\n    currentSex.toLocaleLowerCase() === 'жен'\n  ) {\n    return 'Female';\n  }\n  return 'Both sexes';\n};\n\nexport default currentSexForSearch;\n","import { all, put, select, takeEvery } from 'redux-saga/effects';\n\nimport {\n  form,\n  result,\n  saveBirthDate,\n  saveResult,\n  searchAdd,\n  searchRequestSaga\n} from '../ducks';\n\nimport data from '../../../data/data.json';\n\nimport { API } from '../../../utils/api';\nimport currentSexForSearch from '../../../utils/currentSexForSearch';\n\nimport {\n  selectChosenSex,\n  selectChosenLang,\n  selectCurrentDate,\n  selectCountry\n} from '../../Search/selectors/selectors';\n\nimport { loading, birthDateSaga } from '../ducks';\n\nimport { getBirthDateSagaType, translatedItemType } from '../types/typesSearch';\n\nasync function getData(countryName: string) {\n  const params = new URLSearchParams();\n  params.append('source_language', 'en');\n  params.append('target_language', 'ru');\n  params.append('text', `In ${countryName}`);\n\n  const config = {\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n      'x-rapidapi-host': 'text-translator2.p.rapidapi.com',\n      'x-rapidapi-key': '98974f94fdmshf0e666910f99f56p166f4ejsn57d787efb8c9'\n    }\n  };\n\n  const response = await API.post('translate', params, config).then(\n    (res) => res.data\n  );\n  return response;\n}\n\nfunction* getSearchItem() {\n  const country: string = yield select(selectCountry);\n  const sex: string = yield select(selectChosenSex);\n  const lang: string = yield select(selectChosenLang);\n\n  let finalCountry: string = yield `In ${country}`;\n\n  if (lang === 'rus') {\n    yield put({ type: loading.toString(), payload: true });\n\n    const translatedItem: translatedItemType = yield getData(country);\n\n    if (\n      translatedItem.status === 'success' &&\n      translatedItem.data.translatedText\n    ) {\n      finalCountry = yield translatedItem.data.translatedText;\n    }\n  }\n\n  yield put({\n    type: searchAdd.toString(),\n    payload: finalCountry\n  });\n\n  // from Form\n  const currentSex: string = yield currentSexForSearch(sex);\n\n  // range of relevant data by years\n  const relevantRange = data.fact.filter(\n    (el) =>\n      el.dims.COUNTRY === country &&\n      el.dims.SEX === currentSex &&\n      el.dims.GHO === 'Life expectancy at birth (years)'\n  );\n\n  // find the data for the latest year of the range\n  const totalData = relevantRange.sort((a, b) =>\n    a.dims.YEAR > b.dims.YEAR ? -1 : 1\n  )[0];\n\n  const valueYears = Number(totalData.Value);\n  const statYear = Number(totalData.dims.YEAR);\n\n  yield all([\n    put({ type: saveResult.toString(), payload: { valueYears, statYear } }),\n    put({ type: form.toString(), payload: false }),\n    put({ type: result.toString(), payload: true })\n  ]);\n}\n\nfunction* getBirthDate(action: getBirthDateSagaType) {\n  const birthDate: Date = yield action.payload;\n\n  const end: Date = yield select(selectCurrentDate);\n  const start: Date = yield birthDate;\n\n  const userYears: number = yield (end.getTime() - start.getTime()) /\n    1000 /\n    60 /\n    60 /\n    24 /\n    365;\n\n  yield put({\n    type: saveBirthDate.toString(),\n    payload: { birthDate, userYears }\n  });\n}\n\nexport function* rootSearchSaga() {\n  yield takeEvery(searchRequestSaga, getSearchItem);\n  yield takeEvery(birthDateSaga, getBirthDate);\n}\n","import { fork, all } from 'redux-saga/effects';\n\nimport { rootSearchSaga } from './Search/sagas/saga';\n\nexport default function* rootSaga() {\n  yield all([fork(rootSearchSaga)]);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport App from './components/App';\nimport { RootReducer } from './store/RootReducer';\nimport RootSaga from './store/RootSaga';\n\nimport './index.css';\n\nconst saga = createSagaMiddleware();\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(RootReducer, composeEnhancers(applyMiddleware(saga)));\n\nsaga.run(RootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}